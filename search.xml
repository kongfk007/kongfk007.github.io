<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深拷贝和浅拷贝</title>
      <link href="2022/05/06/Deep-and-shallow-copy/"/>
      <url>2022/05/06/Deep-and-shallow-copy/</url>
      
        <content type="html"><![CDATA[<h1 id="深拷贝和浅拷贝"><a href="#深拷贝和浅拷贝" class="headerlink" title="深拷贝和浅拷贝"></a>深拷贝和浅拷贝</h1><h1 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h1><p>数据分为基本数据类型(String, Number, Boolean, Null, Undefined，Symbol)和对象数据类型。</p><p>1、基本数据类型的特点：直接存储在栈(stack)中的数据</p><p>2、引用数据类型的特点：<strong>存储的是该对象在栈中引用，真实的数据存放在堆内存里</strong></p><p>引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。</p><p><img src="https://upload-images.jianshu.io/upload_images/13253432-74602a0f1cc0d432?imageMogr2/auto-orient/strip%7CimageView2/2/w/459/format/webp"></p><h1 id="二、浅拷贝与深拷贝"><a href="#二、浅拷贝与深拷贝" class="headerlink" title="二、浅拷贝与深拷贝"></a>二、浅拷贝与深拷贝</h1><p><strong>深拷贝和浅拷贝是只针对Object和Array这样的引用数据类型的</strong>。</p><p>深拷贝和浅拷贝的示意图大致如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/13253432-aca35e0020358b3d?imageMogr2/auto-orient/strip%7CimageView2/2/w/310/format/webp" alt="img"></p><p>浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存。但深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象。</p><h1 id="三、赋值和浅拷贝的区别"><a href="#三、赋值和浅拷贝的区别" class="headerlink" title="三、赋值和浅拷贝的区别"></a>三、赋值和浅拷贝的区别</h1><p>当我们把一个对象赋值给一个新的变量时，<strong>赋的其实是该对象的在栈中的地址，而不是堆中的数据</strong>。也就是两个对象指向的是同一个存储空间，无论哪个对象发生改变，其实都是改变的存储空间的内容，因此，两个对象是联动的。</p><p>浅拷贝是按位拷贝对象，<strong>它会创建一个新对象</strong>，这个对象有着原始对象属性值的一份精确拷贝。如果属性是基本类型，拷贝的就是基本类型的值；如果属性是内存地址（引用类型），拷贝的就是内存地址 ，因此如果其中一个对象改变了这个地址，就会影响到另一个对象。即默认拷贝构造函数只是对对象进行浅拷贝复制(逐个成员依次拷贝)，即只复制对象空间而不复制资源。</p><p>我们先来看两个例子，对比赋值与浅拷贝会对原对象带来哪些改变？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象赋值</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">   <span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> :  <span class="string">&#x27;18&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;language&#x27;</span> : [<span class="number">1</span>,[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>]],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line">obj2.name = <span class="string">&quot;lisi&quot;</span>;</span><br><span class="line">obj2.language[<span class="number">1</span>] = [<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;obj1&#x27;</span>,obj1)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;obj2&#x27;</span>,obj2)</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13253432-d07c828f441d8860.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/414/format/webp" alt="img"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浅拷贝</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">   <span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> :  <span class="string">&#x27;18&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;language&#x27;</span> : [<span class="number">1</span>,[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>]],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj3 = shallowCopy(obj1);</span><br><span class="line">obj3.name = <span class="string">&quot;lisi&quot;</span>;</span><br><span class="line">obj3.language[<span class="number">1</span>] = [<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shallowCopy</span>(<span class="params">src</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">var</span> dst = &#123;&#125;;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> src) &#123;</span><br><span class="line">       <span class="keyword">if</span> (src.hasOwnProperty(prop)) &#123;</span><br><span class="line">           dst[prop] = src[prop];</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> dst;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;obj1&#x27;</span>,obj1)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;obj3&#x27;</span>,obj3)</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13253432-1336dee4c3871572.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/415/format/webp" alt="img"></p><p>浅拷贝</p><p>上面例子中，obj1是原始数据，obj2是赋值操作得到，而obj3浅拷贝得到。我们可以很清晰看到对原始数据的影响，具体请看下表：</p><p><img src="https://upload-images.jianshu.io/upload_images/13253432-4eae0bbcf9d34ae3?imageMogr2/auto-orient/strip%7CimageView2/2/w/620/format/webp" alt="img"></p><h1 id="四、浅拷贝的实现方式"><a href="#四、浅拷贝的实现方式" class="headerlink" title="四、浅拷贝的实现方式"></a>四、浅拷贝的实现方式</h1><h3 id="1-Object-assign"><a href="#1-Object-assign" class="headerlink" title="1. Object.assign()"></a>1. Object.assign()</h3><p><code>Object.assign()</code> 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是 <code>Object.assign()</code> 进行的是浅拷贝，拷贝的是对象的属性的引用，而不是对象本身。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">a</span>: &#123;<span class="attr">a</span>: <span class="string">&quot;kobe&quot;</span>, <span class="attr">b</span>: <span class="number">39</span>&#125; &#125;;</span><br><span class="line"><span class="keyword">var</span> initalObj = <span class="built_in">Object</span>.assign(&#123;&#125;, obj);</span><br><span class="line">initalObj.a.a = <span class="string">&quot;wade&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.a.a); <span class="comment">// wade</span></span><br></pre></td></tr></table></figure><p>注意：当object只有一层的时候，是深拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">   <span class="attr">username</span>: <span class="string">&#x27;kobe&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = <span class="built_in">Object</span>.assign(&#123;&#125;,obj);</span><br><span class="line">obj2.username = <span class="string">&#x27;wade&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);<span class="comment">//&#123;username: &quot;kobe&quot;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="五、深拷贝的实现方式"><a href="#五、深拷贝的实现方式" class="headerlink" title="五、深拷贝的实现方式"></a>五、深拷贝的实现方式</h1><h3 id="1-JSON-parse-JSON-stringify"><a href="#1-JSON-parse-JSON-stringify" class="headerlink" title="1. JSON.parse(JSON.stringify())"></a>1. JSON.parse(JSON.stringify())</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">3</span>, &#123;</span><br><span class="line">   <span class="attr">username</span>: <span class="string">&#x27; kobe&#x27;</span></span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(arr));</span><br><span class="line">arr4[<span class="number">2</span>].username = <span class="string">&#x27;duncan&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr, arr4)</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13253432-69586c8b47ecf244.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/418/format/webp" alt="img"></p><p>JSON.parse</p><p>原理： 用JSON.stringify将对象转成JSON字符串，再用JSON.parse()把字符串解析成对象，一去一来，新的对象产生了，而且对象会开辟新的栈，实现深拷贝。</p><p><strong>这种方法虽然可以实现数组或对象深拷贝，但不能处理函数。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">3</span>, &#123;</span><br><span class="line">   <span class="attr">username</span>: <span class="string">&#x27; kobe&#x27;</span></span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;];</span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(arr));</span><br><span class="line">arr4[<span class="number">2</span>].username = <span class="string">&#x27;duncan&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr, arr4);</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13253432-73ffbdd9677977af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/438/format/webp" alt="img"></p><p>这是因为 <code>JSON.stringify()</code> 方法是将一个JavaScript值(对象或者数组)转换为一个 JSON字符串，不能接受函数。</p><h3 id="2-手写递归方法"><a href="#2-手写递归方法" class="headerlink" title="2. 手写递归方法"></a>2. 手写递归方法</h3><p>递归方法实现深度克隆原理：<strong>遍历对象、数组直到里边都是基本数据类型，然后再去复制，就是深度拷贝。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义检测数据类型的功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkedType</span>(<span class="params">target</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(target).slice(<span class="number">8</span>, -<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实现深度克隆---对象/数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">target</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 判断拷贝的数据类型</span></span><br><span class="line">  <span class="comment">// 初始化变量result 成为最终克隆的数据</span></span><br><span class="line">  <span class="keyword">let</span> result, targetType = checkedType(target)</span><br><span class="line">  <span class="keyword">if</span> (targetType === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (targetType === <span class="string">&#x27;Array&#x27;</span>) &#123;</span><br><span class="line">    result = []</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> target</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 遍历目标数据</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> target) &#123;</span><br><span class="line">    <span class="comment">// 获取遍历数据结构的每一项值。</span></span><br><span class="line">    <span class="keyword">let</span> value = target[i]</span><br><span class="line">    <span class="comment">// 判断目标结构里的每一值是否存在对象/数组</span></span><br><span class="line">    <span class="keyword">if</span> (checkedType(value) === <span class="string">&#x27;Object&#x27;</span> ||</span><br><span class="line">      checkedType(value) === <span class="string">&#x27;Array&#x27;</span>) &#123; <span class="comment">//对象/数组里嵌套了对象/数组</span></span><br><span class="line">      <span class="comment">// 继续遍历获取到value值</span></span><br><span class="line">      result[i] = clone(value)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">     <span class="comment">// 获取到value值是基本的数据类型或者是函数。</span></span><br><span class="line">      result[i] = value;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-函数库lodash"><a href="#3-函数库lodash" class="headerlink" title="3. 函数库lodash"></a>3. 函数库lodash</h3><p>该函数库也有提供 <code>_.cloneDeep</code> 用来做 Deep Copy。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _ = <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">   <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">   <span class="attr">b</span>: &#123; <span class="attr">f</span>: &#123; <span class="attr">g</span>: <span class="number">1</span> &#125; &#125;,</span><br><span class="line">   <span class="attr">c</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = _.cloneDeep(obj1);</span><br><span class="line"><span class="built_in">console</span>.log(obj1.b.f === obj2.b.f);</span><br><span class="line"><span class="comment">// false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端常见用60余种工具方法</title>
      <link href="2022/05/06/js-function/"/>
      <url>2022/05/06/js-function/</url>
      
        <content type="html"><![CDATA[<h1 id="前端常见用60余种工具方法"><a href="#前端常见用60余种工具方法" class="headerlink" title="前端常见用60余种工具方法"></a>前端常见用60余种工具方法</h1><h5 id="1-邮箱"><a href="#1-邮箱" class="headerlink" title="1.邮箱"></a>1.邮箱</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isEmail = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/</span>.test(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-手机号码"><a href="#2-手机号码" class="headerlink" title="2.手机号码"></a>2.手机号码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isMobile = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^1[0-9]&#123;10&#125;$/</span>.test(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-电话号码"><a href="#3-电话号码" class="headerlink" title="3.电话号码"></a>3.电话号码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isPhone = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;$/</span>.test(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-是否url地址"><a href="#4-是否url地址" class="headerlink" title="4.是否url地址"></a>4.是否url地址</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isURL = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^http[s]?:\/\/.*/</span>.test(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-是否字符串"><a href="#5-是否字符串" class="headerlink" title="5.是否字符串"></a>5.是否字符串</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isString = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;String&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-是否数字"><a href="#6-是否数字" class="headerlink" title="6.是否数字"></a>6.是否数字</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isNumber = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Number&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-是否boolean"><a href="#7-是否boolean" class="headerlink" title="7.是否boolean"></a>7.是否boolean</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isBoolean = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Boolean&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-是否函数"><a href="#8-是否函数" class="headerlink" title="8.是否函数"></a>8.是否函数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isFunction = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Function&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-是否为null"><a href="#9-是否为null" class="headerlink" title="9.是否为null"></a>9.是否为null</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isNull = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Null&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10-是否undefined"><a href="#10-是否undefined" class="headerlink" title="10.是否undefined"></a>10.是否undefined</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isUndefined = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Undefined&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="11-是否对象"><a href="#11-是否对象" class="headerlink" title="11.是否对象"></a>11.是否对象</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isObj = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Object&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="12-是否数组"><a href="#12-是否数组" class="headerlink" title="12.是否数组"></a>12.是否数组</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isArray = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Array&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="13-是否时间"><a href="#13-是否时间" class="headerlink" title="13.是否时间"></a>13.是否时间</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isDate = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Date&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="14-是否正则"><a href="#14-是否正则" class="headerlink" title="14.是否正则"></a>14.是否正则</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isRegExp = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;RegExp&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="15-是否错误对象"><a href="#15-是否错误对象" class="headerlink" title="15.是否错误对象"></a>15.是否错误对象</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isError = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Error&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="16-是否Symbol函数"><a href="#16-是否Symbol函数" class="headerlink" title="16.是否Symbol函数"></a>16.是否Symbol函数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isSymbol = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Symbol&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="17-是否Promise对象"><a href="#17-是否Promise对象" class="headerlink" title="17.是否Promise对象"></a>17.是否Promise对象</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isPromise = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Promise&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="18-是否Set对象"><a href="#18-是否Set对象" class="headerlink" title="18.是否Set对象"></a>18.是否Set对象</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isSet = <span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Set&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="19-是否是微信浏览器"><a href="#19-是否是微信浏览器" class="headerlink" title="19.是否是微信浏览器"></a>19.是否是微信浏览器</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isWeiXin = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ua.match(<span class="regexp">/microMessenger/i</span>) == <span class="string">&#x27;micromessenger&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="20-是否是移动端"><a href="#20-是否是移动端" class="headerlink" title="20.是否是移动端"></a>20.是否是移动端</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isDeviceMobile = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/android|webos|iphone|ipod|balckberry/i</span>.test(ua)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="22-是否是爬虫"><a href="#22-是否是爬虫" class="headerlink" title="22.是否是爬虫"></a>22.是否是爬虫</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isSpider = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/adsbot|googlebot|bingbot|msnbot|yandexbot|baidubot|robot|careerbot|seznambot|bot|baiduspider|jikespider|symantecspider|scannerlwebcrawler|crawler|360spider|sosospider|sogou web sprider|sogou orion spider/</span>.test(ua)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="23-是否ios"><a href="#23-是否ios" class="headerlink" title="23.是否ios"></a>23.是否ios</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isIos = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> u = navigator.userAgent;</span><br><span class="line">    <span class="keyword">if</span> (u.indexOf(<span class="string">&#x27;Android&#x27;</span>) &gt; -<span class="number">1</span> || u.indexOf(<span class="string">&#x27;Linux&#x27;</span>) &gt; -<span class="number">1</span>) &#123;  <span class="comment">//安卓手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.indexOf(<span class="string">&#x27;iPhone&#x27;</span>) &gt; -<span class="number">1</span>) &#123;<span class="comment">//苹果手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.indexOf(<span class="string">&#x27;iPad&#x27;</span>) &gt; -<span class="number">1</span>) &#123;<span class="comment">//iPad</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.indexOf(<span class="string">&#x27;Windows Phone&#x27;</span>) &gt; -<span class="number">1</span>) &#123;<span class="comment">//winphone手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="24-是否为PC端"><a href="#24-是否为PC端" class="headerlink" title="24.是否为PC端"></a>24.是否为PC端</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isPC = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> userAgentInfo = navigator.userAgent;</span><br><span class="line">    <span class="keyword">var</span> Agents = [<span class="string">&quot;Android&quot;</span>, <span class="string">&quot;iPhone&quot;</span>,</span><br><span class="line">        <span class="string">&quot;SymbianOS&quot;</span>, <span class="string">&quot;Windows Phone&quot;</span>,</span><br><span class="line">        <span class="string">&quot;iPad&quot;</span>, <span class="string">&quot;iPod&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="number">0</span>; v &lt; Agents.length; v++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (userAgentInfo.indexOf(Agents[v]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="25-去除html标签"><a href="#25-去除html标签" class="headerlink" title="25.去除html标签"></a>25.去除html标签</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> removeHtmltag = <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="26-获取url参数"><a href="#26-获取url参数" class="headerlink" title="26.获取url参数"></a>26.获取url参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getQueryString = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;(^|&amp;)&#x27;</span> + name + <span class="string">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>, <span class="string">&#x27;i&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> search = <span class="built_in">window</span>.location.search.split(<span class="string">&#x27;?&#x27;</span>)[<span class="number">1</span>] || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> r = search.match(reg) || [];</span><br><span class="line">    <span class="keyword">return</span> r[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="27-动态引入js"><a href="#27-动态引入js" class="headerlink" title="27.动态引入js"></a>27.动态引入js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> injectScript = <span class="function">(<span class="params">src</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> s = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    s.type = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line">    s.async = <span class="literal">true</span>;</span><br><span class="line">    s.src = src;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;script&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    t.parentNode.insertBefore(s, t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="28-根据url地址下载"><a href="#28-根据url地址下载" class="headerlink" title="28.根据url地址下载"></a>28.根据url地址下载</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> download = <span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> isChrome = navigator.userAgent.toLowerCase().indexOf(<span class="string">&#x27;chrome&#x27;</span>) &gt; -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> isSafari = navigator.userAgent.toLowerCase().indexOf(<span class="string">&#x27;safari&#x27;</span>) &gt; -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (isChrome || isSafari) &#123;</span><br><span class="line">        <span class="keyword">var</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        link.href = url;</span><br><span class="line">        <span class="keyword">if</span> (link.download !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> fileName = url.substring(url.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>, url.length);</span><br><span class="line">            link.download = fileName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.createEvent) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="built_in">document</span>.createEvent(<span class="string">&#x27;MouseEvents&#x27;</span>);</span><br><span class="line">            e.initEvent(<span class="string">&#x27;click&#x27;</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">            link.dispatchEvent(e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (url.indexOf(<span class="string">&#x27;?&#x27;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">        url += <span class="string">&#x27;?download&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.open(url, <span class="string">&#x27;_self&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="29-el是否包含某个class"><a href="#29-el是否包含某个class" class="headerlink" title="29.el是否包含某个class"></a>29.el是否包含某个class</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> hasClass = <span class="function">(<span class="params">el, className</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;(^|\\s)&#x27;</span> + className + <span class="string">&#x27;(\\s|$)&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> reg.test(el.className)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="30-el添加某个class"><a href="#30-el添加某个class" class="headerlink" title="30.el添加某个class"></a>30.el添加某个class</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addClass = <span class="function">(<span class="params">el, className</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (hasClass(el, className)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> newClass = el.className.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    newClass.push(className)</span><br><span class="line">    el.className = newClass.join(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="31-el去除某个class"><a href="#31-el去除某个class" class="headerlink" title="31.el去除某个class"></a>31.el去除某个class</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> removeClass = <span class="function">(<span class="params">el, className</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!hasClass(el, className)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;(^|\\s)&#x27;</span> + className + <span class="string">&#x27;(\\s|$)&#x27;</span>, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">    el.className = el.className.replace(reg, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="32-获取滚动的坐标"><a href="#32-获取滚动的坐标" class="headerlink" title="32.获取滚动的坐标"></a>32.获取滚动的坐标</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getScrollPosition = <span class="function">(<span class="params">el = <span class="built_in">window</span></span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">x</span>: el.pageXOffset !== <span class="literal">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class="line">    <span class="attr">y</span>: el.pageYOffset !== <span class="literal">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="33-滚动到顶部"><a href="#33-滚动到顶部" class="headerlink" title="33.滚动到顶部"></a>33.滚动到顶部</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> scrollToTop = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> c = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">window</span>.requestAnimationFrame(scrollToTop);</span><br><span class="line">        <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, c - c / <span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="34-el是否在视口范围内"><a href="#34-el是否在视口范围内" class="headerlink" title="34.el是否在视口范围内"></a>34.el是否在视口范围内</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> elementIsVisibleInViewport = <span class="function">(<span class="params">el, partiallyVisible = <span class="literal">false</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; top, left, bottom, right &#125; = el.getBoundingClientRect();</span><br><span class="line">    <span class="keyword">const</span> &#123; innerHeight, innerWidth &#125; = <span class="built_in">window</span>;</span><br><span class="line">    <span class="keyword">return</span> partiallyVisible</span><br><span class="line">        ? ((top &gt; <span class="number">0</span> &amp;&amp; top &lt; innerHeight) || (bottom &gt; <span class="number">0</span> &amp;&amp; bottom &lt; innerHeight)) &amp;&amp;</span><br><span class="line">        ((left &gt; <span class="number">0</span> &amp;&amp; left &lt; innerWidth) || (right &gt; <span class="number">0</span> &amp;&amp; right &lt; innerWidth))</span><br><span class="line">        : top &gt;= <span class="number">0</span> &amp;&amp; left &gt;= <span class="number">0</span> &amp;&amp; bottom &lt;= innerHeight &amp;&amp; right &lt;= innerWidth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="35-洗牌算法随机"><a href="#35-洗牌算法随机" class="headerlink" title="35.洗牌算法随机"></a>35.洗牌算法随机</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> shuffle = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> result = [],</span><br><span class="line">        random;</span><br><span class="line">    <span class="keyword">while</span> (arr.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        random = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * arr.length);</span><br><span class="line">        result.push(arr[random])</span><br><span class="line">        arr.splice(random, <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="36-拦截粘贴板"><a href="#36-拦截粘贴板" class="headerlink" title="36.拦截粘贴板"></a>36.拦截粘贴板</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> copyTextToClipboard = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> textArea = <span class="built_in">document</span>.createElement(<span class="string">&quot;textarea&quot;</span>);</span><br><span class="line">    textArea.style.background = <span class="string">&#x27;transparent&#x27;</span>;</span><br><span class="line">    textArea.value = value;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(textArea);</span><br><span class="line">    textArea.select();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> successful = <span class="built_in">document</span>.execCommand(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;Oops, unable to copy&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(textArea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="37-判断类型集合"><a href="#37-判断类型集合" class="headerlink" title="37.判断类型集合"></a>37.判断类型集合</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> checkStr = <span class="function">(<span class="params">str, type</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;phone&#x27;</span>:   <span class="comment">//手机号码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^1[3|4|5|6|7|8|9][0-9]&#123;9&#125;$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>:     <span class="comment">//座机</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^(0\d&#123;2,3&#125;-\d&#123;7,8&#125;)(-\d&#123;1,4&#125;)?$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;card&#x27;</span>:    <span class="comment">//身份证</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:     <span class="comment">//密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]\w&#123;5,17&#125;$/</span>.test(str)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;postal&#x27;</span>:  <span class="comment">//邮政编码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/[1-9]\d&#123;5&#125;(?!\d)/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;QQ&#x27;</span>:      <span class="comment">//QQ号</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[1-9][0-9]&#123;4,9&#125;$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>:   <span class="comment">//邮箱</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;money&#x27;</span>:   <span class="comment">//金额(小数点2位)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^\d*(?:\.\d&#123;0,2&#125;)?$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;URL&#x27;</span>:     <span class="comment">//网址</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/</span>.test(str)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;IP&#x27;</span>:      <span class="comment">//IP</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;date&#x27;</span>:    <span class="comment">//日期时间</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^(\d&#123;4&#125;)\-(\d&#123;2&#125;)\-(\d&#123;2&#125;) (\d&#123;2&#125;)(?:\:\d&#123;2&#125;|:(\d&#123;2&#125;):(\d&#123;2&#125;))$/</span>.test(str) || <span class="regexp">/^(\d&#123;4&#125;)\-(\d&#123;2&#125;)\-(\d&#123;2&#125;)$/</span>.test(str)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;number&#x27;</span>:  <span class="comment">//数字</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[0-9]$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;english&#x27;</span>: <span class="comment">//英文</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]+$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;chinese&#x27;</span>: <span class="comment">//中文</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[\\u4E00-\\u9FA5]+$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>:   <span class="comment">//小写</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-z]+$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>:   <span class="comment">//大写</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[A-Z]+$/</span>.test(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;HTML&#x27;</span>:    <span class="comment">//HTML标记</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/&lt;(&quot;[^&quot;]*&quot;|&#x27;[^&#x27;]*&#x27;|[^&#x27;&quot;&gt;])*&gt;/</span>.test(str);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="38-严格的身份证校验"><a href="#38-严格的身份证校验" class="headerlink" title="38.严格的身份证校验"></a>38.严格的身份证校验</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isCardID = <span class="function">(<span class="params">sId</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.test(sId)) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;你输入的身份证长度或格式错误&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//身份证城市</span></span><br><span class="line">    <span class="keyword">var</span> aCity = &#123; <span class="number">11</span>: <span class="string">&quot;北京&quot;</span>, <span class="number">12</span>: <span class="string">&quot;天津&quot;</span>, <span class="number">13</span>: <span class="string">&quot;河北&quot;</span>, <span class="number">14</span>: <span class="string">&quot;山西&quot;</span>, <span class="number">15</span>: <span class="string">&quot;内蒙古&quot;</span>, <span class="number">21</span>: <span class="string">&quot;辽宁&quot;</span>, <span class="number">22</span>: <span class="string">&quot;吉林&quot;</span>, <span class="number">23</span>: <span class="string">&quot;黑龙江&quot;</span>, <span class="number">31</span>: <span class="string">&quot;上海&quot;</span>, <span class="number">32</span>: <span class="string">&quot;江苏&quot;</span>, <span class="number">33</span>: <span class="string">&quot;浙江&quot;</span>, <span class="number">34</span>: <span class="string">&quot;安徽&quot;</span>, <span class="number">35</span>: <span class="string">&quot;福建&quot;</span>, <span class="number">36</span>: <span class="string">&quot;江西&quot;</span>, <span class="number">37</span>: <span class="string">&quot;山东&quot;</span>, <span class="number">41</span>: <span class="string">&quot;河南&quot;</span>, <span class="number">42</span>: <span class="string">&quot;湖北&quot;</span>, <span class="number">43</span>: <span class="string">&quot;湖南&quot;</span>, <span class="number">44</span>: <span class="string">&quot;广东&quot;</span>, <span class="number">45</span>: <span class="string">&quot;广西&quot;</span>, <span class="number">46</span>: <span class="string">&quot;海南&quot;</span>, <span class="number">50</span>: <span class="string">&quot;重庆&quot;</span>, <span class="number">51</span>: <span class="string">&quot;四川&quot;</span>, <span class="number">52</span>: <span class="string">&quot;贵州&quot;</span>, <span class="number">53</span>: <span class="string">&quot;云南&quot;</span>, <span class="number">54</span>: <span class="string">&quot;西藏&quot;</span>, <span class="number">61</span>: <span class="string">&quot;陕西&quot;</span>, <span class="number">62</span>: <span class="string">&quot;甘肃&quot;</span>, <span class="number">63</span>: <span class="string">&quot;青海&quot;</span>, <span class="number">64</span>: <span class="string">&quot;宁夏&quot;</span>, <span class="number">65</span>: <span class="string">&quot;新疆&quot;</span>, <span class="number">71</span>: <span class="string">&quot;台湾&quot;</span>, <span class="number">81</span>: <span class="string">&quot;香港&quot;</span>, <span class="number">82</span>: <span class="string">&quot;澳门&quot;</span>, <span class="number">91</span>: <span class="string">&quot;国外&quot;</span> &#125;;</span><br><span class="line">    <span class="keyword">if</span> (!aCity[<span class="built_in">parseInt</span>(sId.substr(<span class="number">0</span>, <span class="number">2</span>))]) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;你的身份证地区非法&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 出生日期验证</span></span><br><span class="line">    <span class="keyword">var</span> sBirthday = (sId.substr(<span class="number">6</span>, <span class="number">4</span>) + <span class="string">&quot;-&quot;</span> + <span class="built_in">Number</span>(sId.substr(<span class="number">10</span>, <span class="number">2</span>)) + <span class="string">&quot;-&quot;</span> + <span class="built_in">Number</span>(sId.substr(<span class="number">12</span>, <span class="number">2</span>))).replace(<span class="regexp">/-/g</span>, <span class="string">&quot;/&quot;</span>),</span><br><span class="line">        d = <span class="keyword">new</span> <span class="built_in">Date</span>(sBirthday)</span><br><span class="line">    <span class="keyword">if</span> (sBirthday != (d.getFullYear() + <span class="string">&quot;/&quot;</span> + (d.getMonth() + <span class="number">1</span>) + <span class="string">&quot;/&quot;</span> + d.getDate())) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;身份证上的出生日期非法&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 身份证号码校验</span></span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>,</span><br><span class="line">        weights = [<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">        codes = <span class="string">&quot;10X98765432&quot;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sId.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        sum += sId[i] * weights[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> last = codes[sum % <span class="number">11</span>]; <span class="comment">//计算出来的最后一位身份证号码</span></span><br><span class="line">    <span class="keyword">if</span> (sId[sId.length - <span class="number">1</span>] != last) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;你输入的身份证号非法&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="39-随机数范围"><a href="#39-随机数范围" class="headerlink" title="39.随机数范围"></a>39.随机数范围</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> random = <span class="function">(<span class="params">min, max</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.floor(min + <span class="built_in">Math</span>.random() * ((max + <span class="number">1</span>) - min))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="40-将阿拉伯数字翻译成中文的大写数字"><a href="#40-将阿拉伯数字翻译成中文的大写数字" class="headerlink" title="40.将阿拉伯数字翻译成中文的大写数字"></a>40.将阿拉伯数字翻译成中文的大写数字</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> numberToChinese = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> AA = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;零&quot;</span>, <span class="string">&quot;一&quot;</span>, <span class="string">&quot;二&quot;</span>, <span class="string">&quot;三&quot;</span>, <span class="string">&quot;四&quot;</span>, <span class="string">&quot;五&quot;</span>, <span class="string">&quot;六&quot;</span>, <span class="string">&quot;七&quot;</span>, <span class="string">&quot;八&quot;</span>, <span class="string">&quot;九&quot;</span>, <span class="string">&quot;十&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> BB = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;&quot;</span>, <span class="string">&quot;十&quot;</span>, <span class="string">&quot;百&quot;</span>, <span class="string">&quot;仟&quot;</span>, <span class="string">&quot;萬&quot;</span>, <span class="string">&quot;億&quot;</span>, <span class="string">&quot;点&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> a = (<span class="string">&quot;&quot;</span> + num).replace(<span class="regexp">/(^0*)/g</span>, <span class="string">&quot;&quot;</span>).split(<span class="string">&quot;.&quot;</span>),</span><br><span class="line">        k = <span class="number">0</span>,</span><br><span class="line">        re = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = a[<span class="number">0</span>].length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (k) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                re = BB[<span class="number">7</span>] + re;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;0&#123;4&#125;//d&#123;&quot;</span> + (a[<span class="number">0</span>].length - i - <span class="number">1</span>) + <span class="string">&quot;&#125;$&quot;</span>)</span><br><span class="line">                    .test(a[<span class="number">0</span>]))</span><br><span class="line">                    re = BB[<span class="number">4</span>] + re;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                re = BB[<span class="number">5</span>] + re;</span><br><span class="line">                BB[<span class="number">7</span>] = BB[<span class="number">5</span>];</span><br><span class="line">                k = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">4</span> == <span class="number">2</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">2</span>) != <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">1</span>) == <span class="number">0</span>)</span><br><span class="line">            re = AA[<span class="number">0</span>] + re;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>].charAt(i) != <span class="number">0</span>)</span><br><span class="line">            re = AA[a[<span class="number">0</span>].charAt(i)] + BB[k % <span class="number">4</span>] + re;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.length &gt; <span class="number">1</span>) <span class="comment">// 加上小数部分(如果有小数部分)</span></span><br><span class="line">    &#123;</span><br><span class="line">        re += BB[<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>].length; i++)</span><br><span class="line">            re += AA[a[<span class="number">1</span>].charAt(i)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (re == <span class="string">&#x27;一十&#x27;</span>)</span><br><span class="line">        re = <span class="string">&quot;十&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (re.match(<span class="regexp">/^一/</span>) &amp;&amp; re.length == <span class="number">3</span>)</span><br><span class="line">        re = re.replace(<span class="string">&quot;一&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="41-将数字转换为大写金额"><a href="#41-将数字转换为大写金额" class="headerlink" title="41.将数字转换为大写金额"></a>41.将数字转换为大写金额</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> changeToChinese = <span class="function">(<span class="params">Num</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//判断如果传递进来的不是字符的话转换为字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> Num == <span class="string">&quot;number&quot;</span>) &#123;</span><br><span class="line">        Num = <span class="keyword">new</span> <span class="built_in">String</span>(Num);</span><br><span class="line">    &#125;;</span><br><span class="line">    Num = Num.replace(<span class="regexp">/,/g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">//替换tomoney()中的“,”</span></span><br><span class="line">    Num = Num.replace(<span class="regexp">/ /g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">//替换tomoney()中的空格</span></span><br><span class="line">    Num = Num.replace(<span class="regexp">/￥/g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">//替换掉可能出现的￥字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(Num)) &#123; <span class="comment">//验证输入的字符是否为数字</span></span><br><span class="line">        <span class="comment">//alert(&quot;请检查小写金额是否正确&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//字符处理完毕后开始转换，采用前后两部分分别转换</span></span><br><span class="line">    <span class="keyword">var</span> part = <span class="built_in">String</span>(Num).split(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> newchar = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//小数点前进行转化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = part[<span class="number">0</span>].length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (part[<span class="number">0</span>].length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="comment">//若数量超过拾亿单位，提示</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> tmpnewchar = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">var</span> perchar = part[<span class="number">0</span>].charAt(i);</span><br><span class="line">        <span class="keyword">switch</span> (perchar) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;0&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;零&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;壹&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;贰&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;叁&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;肆&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;伍&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;陆&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;柒&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;捌&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&quot;玖&quot;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (part[<span class="number">0</span>].length - i - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&quot;元&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;拾&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;佰&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;仟&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&quot;万&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;拾&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;佰&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;仟&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&quot;亿&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&quot;拾&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> newchar = tmpnewchar + newchar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//小数点之后进行转化</span></span><br><span class="line">    <span class="keyword">if</span> (Num.indexOf(<span class="string">&quot;.&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (part[<span class="number">1</span>].length &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// alert(&quot;小数点之后只能保留两位,系统将自动截断&quot;);</span></span><br><span class="line">            part[<span class="number">1</span>] = part[<span class="number">1</span>].substr(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; part[<span class="number">1</span>].length; i++) &#123;</span><br><span class="line">            tmpnewchar = <span class="string">&quot;&quot;</span></span><br><span class="line">            perchar = part[<span class="number">1</span>].charAt(i)</span><br><span class="line">            <span class="keyword">switch</span> (perchar) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;0&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;零&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;壹&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;贰&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;叁&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;肆&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;伍&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;陆&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;柒&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;捌&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&quot;玖&quot;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;角&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>) tmpnewchar = tmpnewchar + <span class="string">&quot;分&quot;</span>;</span><br><span class="line">            newchar = newchar + tmpnewchar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//替换所有无用汉字</span></span><br><span class="line">    <span class="keyword">while</span> (newchar.search(<span class="string">&quot;零零&quot;</span>) != -<span class="number">1</span>)</span><br><span class="line">        newchar = newchar.replace(<span class="string">&quot;零零&quot;</span>, <span class="string">&quot;零&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;零亿&quot;</span>, <span class="string">&quot;亿&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;亿万&quot;</span>, <span class="string">&quot;亿&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;零万&quot;</span>, <span class="string">&quot;万&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;零元&quot;</span>, <span class="string">&quot;元&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;零角&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    newchar = newchar.replace(<span class="string">&quot;零分&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (newchar.charAt(newchar.length - <span class="number">1</span>) == <span class="string">&quot;元&quot;</span>) &#123;</span><br><span class="line">        newchar = newchar + <span class="string">&quot;整&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newchar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="42-判断一个元素是否在数组中"><a href="#42-判断一个元素是否在数组中" class="headerlink" title="42.判断一个元素是否在数组中"></a>42.判断一个元素是否在数组中</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> contains = <span class="function">(<span class="params">arr, val</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.indexOf(val) != -<span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="43-数组排序，-type-1：从小到大-2：从大到小-3：随机"><a href="#43-数组排序，-type-1：从小到大-2：从大到小-3：随机" class="headerlink" title="43.数组排序，{type} 1：从小到大 2：从大到小 3：随机"></a>43.数组排序，{type} 1：从小到大 2：从大到小 3：随机</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sort = <span class="function">(<span class="params">arr, type = <span class="number">1</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> a - b;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> b - a;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Math</span>.random() - <span class="number">0.5</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="44-去重"><a href="#44-去重" class="headerlink" title="44.去重"></a>44.去重</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> unique = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.hasOwnProperty(<span class="string">&#x27;from&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> n = &#123;&#125;, r = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!n[arr[i]]) &#123;</span><br><span class="line">                n[arr[i]] = <span class="literal">true</span>;</span><br><span class="line">                r.push(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="45-求两个集合的并集"><a href="#45-求两个集合的并集" class="headerlink" title="45.求两个集合的并集"></a>45.求两个集合的并集</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> union = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> newArr = a.concat(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.unique(newArr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="46-求两个集合的交集"><a href="#46-求两个集合的交集" class="headerlink" title="46.求两个集合的交集"></a>46.求两个集合的交集</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> intersect = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="built_in">this</span>;</span><br><span class="line">    a = <span class="built_in">this</span>.unique(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.map(a, <span class="function"><span class="keyword">function</span> (<span class="params">o</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _this.contains(b, o) ? o : <span class="literal">null</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="47-删除其中一个元素"><a href="#47-删除其中一个元素" class="headerlink" title="47.删除其中一个元素"></a>47.删除其中一个元素</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> remove = <span class="function">(<span class="params">arr, ele</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> index = arr.indexOf(ele);</span><br><span class="line">    <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        arr.splice(index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="48-将类数组转换为数组"><a href="#48-将类数组转换为数组" class="headerlink" title="48.将类数组转换为数组"></a>48.将类数组转换为数组</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> formArray = <span class="function">(<span class="params">ary</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(ary)) &#123;</span><br><span class="line">        arr = ary;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        arr = <span class="built_in">Array</span>.prototype.slice.call(ary);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="49-最大值"><a href="#49-最大值" class="headerlink" title="49.最大值"></a>49.最大值</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> max = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="50-最小值"><a href="#50-最小值" class="headerlink" title="50.最小值"></a>50.最小值</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> min = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="51-求和"><a href="#51-求和" class="headerlink" title="51.求和"></a>51.求和</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sum = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">pre, cur</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pre + cur</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="52-平均值"><a href="#52-平均值" class="headerlink" title="52.平均值"></a>52.平均值</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> average = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.sum(arr) / arr.length</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="53-去除空格-type-1-所有空格-2-前后空格-3-前空格-4-后空格"><a href="#53-去除空格-type-1-所有空格-2-前后空格-3-前空格-4-后空格" class="headerlink" title="53.去除空格,type: 1-所有空格 2-前后空格 3-前空格 4-后空格"></a>53.去除空格,type: 1-所有空格 2-前后空格 3-前空格 4-后空格</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> trim = <span class="function">(<span class="params">str, type</span>) =&gt;</span> &#123;</span><br><span class="line">    type = type || <span class="number">1</span></span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> str.replace(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> str.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> str.replace(<span class="regexp">/(^\s*)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> str.replace(<span class="regexp">/(\s*$)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="54-字符转换，type-1-首字母大写-2：首字母小写-3：大小写转换-4：全部大写-5：全部小写"><a href="#54-字符转换，type-1-首字母大写-2：首字母小写-3：大小写转换-4：全部大写-5：全部小写" class="headerlink" title="54.字符转换，type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写"></a>54.字符转换，type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> max = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="55-检测密码强度"><a href="#55-检测密码强度" class="headerlink" title="55.检测密码强度"></a>55.检测密码强度</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> checkPwd = <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> Lv = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (str.length &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> Lv</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[0-9]/</span>.test(str)) &#123;</span><br><span class="line">        Lv++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[a-z]/</span>.test(str)) &#123;</span><br><span class="line">        Lv++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[A-Z]/</span>.test(str)) &#123;</span><br><span class="line">        Lv++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[\.|-|_]/</span>.test(str)) &#123;</span><br><span class="line">        Lv++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Lv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="56-函数节流器"><a href="#56-函数节流器" class="headerlink" title="56.函数节流器"></a>56.函数节流器</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> debouncer = <span class="function">(<span class="params">fn, time, interval = <span class="number">200</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (time - (<span class="built_in">window</span>.debounceTimestamp || <span class="number">0</span>) &gt; interval) &#123;</span><br><span class="line">        fn &amp;&amp; fn();</span><br><span class="line">        <span class="built_in">window</span>.debounceTimestamp = time;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="57-在字符串中插入新字符串"><a href="#57-在字符串中插入新字符串" class="headerlink" title="57.在字符串中插入新字符串"></a>57.在字符串中插入新字符串</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> insertStr = <span class="function">(<span class="params">soure, index, newStr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> str = soure.slice(<span class="number">0</span>, index) + newStr + soure.slice(index);</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="58-判断两个对象是否键值相同"><a href="#58-判断两个对象是否键值相同" class="headerlink" title="58.判断两个对象是否键值相同"></a>58.判断两个对象是否键值相同</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isObjectEqual = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> aProps = <span class="built_in">Object</span>.getOwnPropertyNames(a);</span><br><span class="line">    <span class="keyword">var</span> bProps = <span class="built_in">Object</span>.getOwnPropertyNames(b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (aProps.length !== bProps.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aProps.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> propName = aProps[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a[propName] !== b[propName]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="59-16进制颜色转RGBRGBA字符串"><a href="#59-16进制颜色转RGBRGBA字符串" class="headerlink" title="59.16进制颜色转RGBRGBA字符串"></a>59.16进制颜色转RGBRGBA字符串</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> colorToRGB = <span class="function">(<span class="params">val, opa</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pattern = <span class="regexp">/^(#?)[a-fA-F0-9]&#123;6&#125;$/</span>; <span class="comment">//16进制颜色值校验规则</span></span><br><span class="line">    <span class="keyword">var</span> isOpa = <span class="keyword">typeof</span> opa == <span class="string">&#x27;number&#x27;</span>; <span class="comment">//判断是否有设置不透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!pattern.test(val)) &#123; <span class="comment">//如果值不符合规则返回空字符</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> v = val.replace(<span class="regexp">/#/</span>, <span class="string">&#x27;&#x27;</span>); <span class="comment">//如果有#号先去除#号</span></span><br><span class="line">    <span class="keyword">var</span> rgbArr = [];</span><br><span class="line">    <span class="keyword">var</span> rgbStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> item = v.substring(i * <span class="number">2</span>, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> num = <span class="built_in">parseInt</span>(item, <span class="number">16</span>);</span><br><span class="line">        rgbArr.push(num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rgbStr = rgbArr.join();</span><br><span class="line">    rgbStr = <span class="string">&#x27;rgb&#x27;</span> + (isOpa ? <span class="string">&#x27;a&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;(&#x27;</span> + rgbStr + (isOpa ? <span class="string">&#x27;,&#x27;</span> + opa : <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> rgbStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="60-追加url参数"><a href="#60-追加url参数" class="headerlink" title="60.追加url参数"></a>60.追加url参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> appendQuery = <span class="function">(<span class="params">url, key, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> options = key;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> options == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        options = &#123;&#125;;</span><br><span class="line">        options[key] = value;</span><br><span class="line">    &#125;</span><br><span class="line">    options = $.param(options);</span><br><span class="line">    <span class="keyword">if</span> (url.includes(<span class="string">&#x27;?&#x27;</span>)) &#123;</span><br><span class="line">        url += <span class="string">&#x27;&amp;&#x27;</span> + options</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        url += <span class="string">&#x27;?&#x27;</span> + options</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="61-格式化时间"><a href="#61-格式化时间" class="headerlink" title="61.格式化时间"></a>61.格式化时间</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//任意格式日期处理</span></span><br><span class="line"><span class="comment">//使用格式：</span></span><br><span class="line"><span class="comment">// &#123;&#123; &#x27;2018-09-14 01:05&#x27; | formaDate(yyyy-MM-dd hh:mm:ss) &#125;&#125; </span></span><br><span class="line"><span class="comment">// &#123;&#123; &#x27;2018-09-14 01:05&#x27; | formaDate(yyyy-MM-dd) &#125;&#125; </span></span><br><span class="line"><span class="comment">// &#123;&#123; &#x27;2018-09-14 01:05&#x27; | formaDate(MM/dd) &#125;&#125; 等</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formaDate</span>(<span class="params">value, fmt</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(value);</span><br><span class="line"> <span class="keyword">var</span> o = &#123;</span><br><span class="line"> <span class="string">&quot;M+&quot;</span>: date.getMonth() + <span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line"> <span class="string">&quot;d+&quot;</span>: date.getDate(), <span class="comment">//日</span></span><br><span class="line"> <span class="string">&quot;h+&quot;</span>: date.getHours(), <span class="comment">//小时</span></span><br><span class="line"> <span class="string">&quot;m+&quot;</span>: date.getMinutes(), <span class="comment">//分</span></span><br><span class="line"> <span class="string">&quot;s+&quot;</span>: date.getSeconds(), <span class="comment">//秒</span></span><br><span class="line"> <span class="string">&quot;w+&quot;</span>: date.getDay(), <span class="comment">//星期</span></span><br><span class="line"> <span class="string">&quot;q+&quot;</span>: <span class="built_in">Math</span>.floor((date.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line"> <span class="string">&quot;S&quot;</span>: date.getMilliseconds() <span class="comment">//毫秒</span></span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$1, (date.getFullYear() + <span class="string">&quot;&quot;</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$1.length));</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line"> <span class="keyword">if</span>(k === <span class="string">&#x27;w+&#x27;</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span>(o[k] === <span class="number">0</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周日&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">1</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周一&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">2</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周二&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">3</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周三&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">4</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周四&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">5</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周五&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o[k] === <span class="number">6</span>) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;周六&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(&quot;</span> + k + <span class="string">&quot;)&quot;</span>).test(fmt)) &#123;</span><br><span class="line"> fmt = fmt.replace(<span class="built_in">RegExp</span>.$1, (<span class="built_in">RegExp</span>.$1.length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span> + o[k]).substr((<span class="string">&quot;&quot;</span> + o[k]).length)));</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> fmt;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="62-处理字符串地区，返回数组"><a href="#62-处理字符串地区，返回数组" class="headerlink" title="62.处理字符串地区，返回数组"></a>62.处理字符串地区，返回数组</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cityFormat = <span class="function"><span class="params">city</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> address = city;</span><br><span class="line">  <span class="keyword">let</span> regex = <span class="string">&quot;(?&lt;province&gt;[^省]+省|.+自治区)(?&lt;city&gt;[^自治州]+自治州|[^市]+市|[^盟]+盟|[^地区]+地区|.+区划)(?&lt;county&gt;[^市]+市|[^县]+县|[^旗]+旗|.+区)?(?&lt;town&gt;[^区]+区|.+镇)?(?&lt;village&gt;.*)&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> provinces = address.match(regex)[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">const</span> citys = address.match(regex)[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">const</span> districts = address.match(regex)[<span class="number">3</span>];</span><br><span class="line">  <span class="keyword">const</span> addressss = address.match(regex)[<span class="number">5</span>]</span><br><span class="line">  <span class="keyword">const</span> region = [provinces, citys, districts, addressss]</span><br><span class="line">  <span class="keyword">return</span> region</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="63-格式化时间2"><a href="#63-格式化时间2" class="headerlink" title="63.格式化时间2"></a>63.格式化时间2</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如format = &quot;yyyy-MM-dd hh:mm:ss&quot;;</span></span><br><span class="line"><span class="comment">// 不传，默认yyyy-MM-dd</span></span><br><span class="line"><span class="keyword">var</span> dateFormat = <span class="function"><span class="keyword">function</span> (<span class="params">timestamp, format</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!format) &#123;</span><br><span class="line">    <span class="comment">// format = &quot;yyyy-MM-dd hh:mm:ss&quot;;</span></span><br><span class="line">    format = <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  timestamp = <span class="built_in">parseInt</span>(timestamp);</span><br><span class="line">  <span class="keyword">var</span> realDate = getDate(timestamp);</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">timeFormat</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num &lt; <span class="number">10</span> ?<span class="string">&#x27;0&#x27;</span> + num : num;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> date = [</span><br><span class="line">    [<span class="string">&quot;M+&quot;</span>, timeFormat(realDate.getMonth() + <span class="number">1</span>)],</span><br><span class="line">    [<span class="string">&quot;d+&quot;</span>, timeFormat(realDate.getDate())],</span><br><span class="line">    [<span class="string">&quot;h+&quot;</span>, timeFormat(realDate.getHours())],</span><br><span class="line">    [<span class="string">&quot;m+&quot;</span>, timeFormat(realDate.getMinutes())],</span><br><span class="line">    [<span class="string">&quot;s+&quot;</span>, timeFormat(realDate.getSeconds())],</span><br><span class="line">    [<span class="string">&quot;q+&quot;</span>, <span class="built_in">Math</span>.floor((realDate.getMonth() + <span class="number">3</span>) / <span class="number">3</span>)],</span><br><span class="line">    [<span class="string">&quot;S+&quot;</span>, realDate.getMilliseconds()],</span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">var</span> reg1 = regYear.exec(format);</span><br><span class="line">  <span class="comment">// console.log(reg1[0]);</span></span><br><span class="line">  <span class="keyword">if</span> (reg1) &#123;</span><br><span class="line">    format = format.replace(reg1[<span class="number">1</span>], (realDate.getFullYear() + <span class="string">&#x27;&#x27;</span>).substring(<span class="number">4</span> - reg1[<span class="number">1</span>].length));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; date.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> k = date[i][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> v = date[i][<span class="number">1</span>]; <span class="keyword">var</span> reg2 = getRegExp(<span class="string">&quot;(&quot;</span> + k + <span class="string">&quot;)&quot;</span>).exec(format);</span><br><span class="line">    <span class="keyword">if</span> (reg2) &#123;</span><br><span class="line">      format = format.replace(reg2[<span class="number">1</span>], reg2[<span class="number">1</span>].length == <span class="number">1</span></span><br><span class="line">        ? v : (<span class="string">&quot;00&quot;</span> + v).substring((<span class="string">&quot;&quot;</span> + v).length));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> format;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="63-格式化发表时间"><a href="#63-格式化发表时间" class="headerlink" title="63.格式化发表时间"></a>63.格式化发表时间</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getGapTime</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> re = <span class="string">&quot;00&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> timestamp = getDate().getTime();</span><br><span class="line">  timestamp = <span class="built_in">parseInt</span>(timestamp / <span class="number">1000</span>);</span><br><span class="line">  <span class="comment">//发表文章的时间戳 s</span></span><br><span class="line">  <span class="keyword">var</span> publicstamp = getDate(date).getTime();</span><br><span class="line">  publicstamp = <span class="built_in">parseInt</span>(publicstamp / <span class="number">1000</span>)</span><br><span class="line">  <span class="comment">//时间差s</span></span><br><span class="line">  <span class="keyword">var</span> gap = timestamp - publicstamp</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (gap &lt; <span class="number">60</span>) &#123;</span><br><span class="line">    re = <span class="string">&quot;刚刚&quot;</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gap &lt; <span class="number">60</span> * <span class="number">60</span>) &#123;</span><br><span class="line">    re = <span class="built_in">parseInt</span>(gap / <span class="number">60</span>) + <span class="string">&quot;分钟前&quot;</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gap &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>) &#123;</span><br><span class="line">    re = <span class="built_in">parseInt</span>(gap / <span class="number">60</span> / <span class="number">60</span>) + <span class="string">&quot;小时前&quot;</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gap &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>) &#123;</span><br><span class="line">    re = <span class="built_in">parseInt</span>(gap / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>) + <span class="string">&quot;天前&quot;</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    re = date.substring(<span class="number">0</span>, <span class="number">10</span>)  <span class="comment">//时间超过1个月返回具体的 年-月-日</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> re</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="64-返回本一周时间"><a href="#64-返回本一周时间" class="headerlink" title="64.返回本一周时间"></a>64.返回本一周时间</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">constructor1</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="built_in">this</span>.nowYear = <span class="built_in">this</span>.now.getYear(); <span class="comment">//当前年 </span></span><br><span class="line">  <span class="built_in">this</span>.nowMonth = <span class="built_in">this</span>.now.getMonth(); <span class="comment">//当前月 </span></span><br><span class="line">  <span class="built_in">this</span>.nowDay = <span class="built_in">this</span>.now.getDate(); <span class="comment">//当前日 </span></span><br><span class="line">  <span class="built_in">this</span>.nowDayOfWeek = <span class="built_in">this</span>.now.getDay(); <span class="comment">//今天是本周的第几天 </span></span><br><span class="line">  <span class="built_in">this</span>.nowYear += (<span class="built_in">this</span>.nowYear &lt; <span class="number">2000</span>) ? <span class="number">1900</span> : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//格式化数字</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatNumber</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  n = n.toString()</span><br><span class="line">  <span class="keyword">return</span> n[<span class="number">1</span>] ? n : <span class="string">&#x27;0&#x27;</span> + n</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//格式化日期</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDate</span>(<span class="params">date</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> myyear = date.getFullYear();</span><br><span class="line">  <span class="keyword">let</span> mymonth = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> myweekday = date.getDate();</span><br><span class="line">  <span class="keyword">return</span> [myyear, mymonth, myweekday].map(<span class="built_in">this</span>.formatNumber).join(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">  <span class="comment">// return [myweekday].map(this.formatNumber).join(&#x27;-&#x27;);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取某月的天数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMonthDays</span> (<span class="params">myMonth</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> monthStartDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.nowYear, myMonth, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">let</span> monthEndDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.nowYear, myMonth + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">let</span> days = (monthEndDate - monthStartDate) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);</span><br><span class="line">  <span class="keyword">return</span> days;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取本季度的开始月份</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQuarterStartMonth</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> startMonth = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.nowMonth &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    startMonth = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="number">2</span> &lt; <span class="built_in">this</span>.nowMonth &amp;&amp; <span class="built_in">this</span>.nowMonth &lt; <span class="number">6</span>) &#123;</span><br><span class="line">    startMonth = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="number">5</span> &lt; <span class="built_in">this</span>.nowMonth &amp;&amp; <span class="built_in">this</span>.nowMonth &lt; <span class="number">9</span>) &#123;</span><br><span class="line">    startMonth = <span class="number">6</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.nowMonth &gt; <span class="number">8</span>) &#123;</span><br><span class="line">    startMonth = <span class="number">9</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> startMonth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取本周的开始日期</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getWeekStartDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span>.formatDate(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.nowYear, <span class="built_in">this</span>.nowMonth, <span class="built_in">this</span>.nowDay - <span class="built_in">this</span>.nowDayOfWeek + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取本周的结束日期</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getWeekEndDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span>.formatDate(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.nowYear, <span class="built_in">this</span>.nowMonth, <span class="built_in">this</span>.nowDay + (<span class="number">6</span> - <span class="built_in">this</span>.nowDayOfWeek + <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取今天的日期</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNowDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span>.formatDate(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.nowYear, <span class="built_in">this</span>.nowMonth, <span class="built_in">this</span>.nowDay));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatTime</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> year = date.getFullYear()</span><br><span class="line">  <span class="keyword">var</span> month = date.getMonth() + <span class="number">1</span></span><br><span class="line">  <span class="keyword">var</span> day = date.getDate()</span><br><span class="line">  <span class="keyword">var</span> hour = date.getHours()</span><br><span class="line">  <span class="keyword">var</span> minute = date.getMinutes()</span><br><span class="line">  <span class="keyword">var</span> second = date.getSeconds()</span><br><span class="line">  <span class="keyword">return</span> [year, month, day].map(formatNumber).join(<span class="string">&#x27;/&#x27;</span>) + <span class="string">&#x27; &#x27;</span> + [hour, minute, second].map(formatNumber).join(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">formatNumber</span>: formatNumber,</span><br><span class="line">  <span class="attr">constructor1</span>: <span class="title">constructor1</span>,</span><br><span class="line">  <span class="title">formatDate</span>: <span class="title">formatDate</span>,</span><br><span class="line">  <span class="title">getMonthDays</span>: <span class="title">getMonthDays</span>,</span><br><span class="line">  <span class="title">getQuarterStartMonth</span>: <span class="title">getQuarterStartMonth</span>,</span><br><span class="line">  <span class="title">getWeekStartDate</span>: <span class="title">getWeekStartDate</span>,</span><br><span class="line">  <span class="title">getNowDate</span>: <span class="title">getNowDate</span>,</span><br><span class="line">  <span class="title">getWeekEndDate</span>: <span class="title">getWeekEndDate</span>,</span><br><span class="line">  <span class="title">formatTime</span>: <span class="title">formatTime</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="65-防抖"><a href="#65-防抖" class="headerlink" title="65.防抖"></a>65.防抖</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 防抖原理：一定时间内，只有最后一次操作，再过wait毫秒后才执行函数</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>func 要执行的回调函数 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 延时的时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> timeout = <span class="literal">null</span>;</span><br><span class="line"><span class="function"><span class="title">debounce</span>(<span class="params">func, wait = <span class="number">500</span>, immediate = <span class="literal">false</span></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 清除定时器</span></span><br><span class="line">    <span class="keyword">if</span> (timeout !== <span class="literal">null</span>) <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">    <span class="comment">// 立即执行，此类情况一般用不到</span></span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">var</span> callNow = !timeout;</span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        timeout = <span class="literal">null</span>;</span><br><span class="line">      &#125;, wait);</span><br><span class="line">      <span class="keyword">if</span> (callNow) <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法</span></span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">      &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="65-节流"><a href="#65-节流" class="headerlink" title="65.节流"></a>65.节流</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 节流原理：在一定时间内，只能触发一次</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>func 要执行的回调函数 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 延时的时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> timer, flag;</span><br><span class="line"><span class="function"><span class="title">throttle</span>(<span class="params">func, wait = <span class="number">500</span>, immediate = <span class="literal">true</span></span>)</span> &#123;    </span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 如果是立即执行，则在wait毫秒内开始时执行</span></span><br><span class="line">        <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;, wait);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        flag = <span class="literal">true</span></span><br><span class="line">        <span class="comment">// 如果是非立即执行，则在wait毫秒内的结束处执行</span></span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          flag = <span class="literal">false</span></span><br><span class="line">          <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">        &#125;, wait);</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>封装Vue组件的原则及技巧</title>
      <link href="2022/05/06/Encapsulate-vue-components/"/>
      <url>2022/05/06/Encapsulate-vue-components/</url>
      
        <content type="html"><![CDATA[<h1 id="封装Vue组件的原则及技巧"><a href="#封装Vue组件的原则及技巧" class="headerlink" title="封装Vue组件的原则及技巧"></a>封装Vue组件的原则及技巧</h1><h4 id="一、什么样的内容需要封装"><a href="#一、什么样的内容需要封装" class="headerlink" title="一、什么样的内容需要封装"></a>一、什么样的内容需要封装</h4><p>一段代码在项目中出现两次就开始考虑是否应该进行封装，出现三次就肯定要封装，大到一个页面，一个组件，小到一个function和一个css样式。</p><h4 id="二、Vue组件的API主要有三：prop、event和slot"><a href="#二、Vue组件的API主要有三：prop、event和slot" class="headerlink" title="二、Vue组件的API主要有三：prop、event和slot"></a>二、Vue组件的API主要有三：prop、event和slot</h4><ul><li>props：组件接收的参数，最好用对象的写法，这样可以针对每个属性设置类型、默认值或自定义校验属性的值，此外还可以通过type、validator等方式对输入进行验证。</li><li>slot：给组件动态插入一些内容或组件，是实现高阶组件的重要途径；当需要多个插槽时，可以使用具名slot。</li><li>event：子组件向父组件自定义事件。</li></ul><h4 id="三、封装原则（以下将封装出来的通用组件叫做子组件，引用通用组件的界面叫做父组件）"><a href="#三、封装原则（以下将封装出来的通用组件叫做子组件，引用通用组件的界面叫做父组件）" class="headerlink" title="三、封装原则（以下将封装出来的通用组件叫做子组件，引用通用组件的界面叫做父组件）"></a>三、封装原则（以下将封装出来的通用组件叫做子组件，引用通用组件的界面叫做父组件）</h4><h5 id="1、数据从父组件传入"><a href="#1、数据从父组件传入" class="headerlink" title="1、数据从父组件传入"></a>1、数据从父组件传入</h5><p>​    子组件本身不要生成数据，如果需要生成数据，只能在组件内部进行使用，不要传递出去。对于通过props传入的参数，不建议对其进行操作，因为会同时修改父组件里面的数据（如果修改的话，控制台中也会报错的），如果需要修改数据，可以传递给父组件，让父组件去修改（在父组件中处理事件）。</p><h5 id="2、父组件中处理事件"><a href="#2、父组件中处理事件" class="headerlink" title="2、父组件中处理事件"></a>2、父组件中处理事件</h5><p>​    父组件中处理的事件是和后端交互的事件，比如发起的axios的请求，但并不是所有的事件都放到父组件中处理，比如组件内部的一些交互行为，或者处理的数据只在组件内部传递，就可以在子组件中处理。</p><h5 id="3、记得留一个slot"><a href="#3、记得留一个slot" class="headerlink" title="3、记得留一个slot"></a>3、记得留一个slot</h5><p>​    一个通用的组件，往往不能完美的适应所有的应用场景，所以在封装组件的时候，只需要完成组件的80%的功能，剩下的20%让父组件通过slot解决。</p><p>​    slot是一个插槽，用于分发内容。相当于我在餐厅（子组件）给你占了一个位置，上面写上operate，那你来这里吃饭，如果你是operate，你就可以坐在这个位置上，如果你不是，你就不能坐在这个位置上。</p><p>​    简单说就是把父组件中的内容放到对应的插槽的位置上。</p><h5 id="4、不要依赖vuex"><a href="#4、不要依赖vuex" class="headerlink" title="4、不要依赖vuex"></a>4、不要依赖vuex</h5><p>​    如果要抽离组件尽量不要使用vuex来实现参数的传递，因为vuex是用来管理组件状态的，虽然可以用来传参，但是不推荐，可以选择放到localstorage中，或者通过props传递等方式。</p><h5 id="5、合理使用scoped"><a href="#5、合理使用scoped" class="headerlink" title="5、合理使用scoped"></a>5、合理使用scoped</h5><p>​    样式中添加scoped可以让样式只对当前组件生效，但是一味使用scoped，会产生重复代码，所以需要有一个全局的样式，组件内只写针对于组件的样式，避免重复的样式代码。</p><h5 id="6、组件具有单一职责"><a href="#6、组件具有单一职责" class="headerlink" title="6、组件具有单一职责"></a>6、组件具有单一职责</h5><p>​    封装业务组件或者基础组件，如果不能给这个组件起一个有意义的名字，证明这个组件承担的职责可能不够单一，需要继续抽组件，直到它可以是一个独立的组件即可。</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>防抖和节流</title>
      <link href="2022/05/06/debounce-throttle/"/>
      <url>2022/05/06/debounce-throttle/</url>
      
        <content type="html"><![CDATA[<h1 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h1><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 防抖原理：一定时间wait毫秒内，无论操作多少次，只有最后一次操作有作用，再过wait毫秒后才执行函数</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>func 要执行的回调函数 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 延时的时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> timeout = <span class="literal">null</span>;</span><br><span class="line"><span class="function"><span class="title">debounce</span>(<span class="params">func, wait = <span class="number">500</span>, immediate = <span class="literal">false</span></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 清除定时器</span></span><br><span class="line">    <span class="keyword">if</span> (timeout !== <span class="literal">null</span>) <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">    <span class="comment">// 立即执行，此类情况一般用不到</span></span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">var</span> callNow = !timeout;</span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        timeout = <span class="literal">null</span>;</span><br><span class="line">      &#125;, wait);</span><br><span class="line">      <span class="keyword">if</span> (callNow) <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法</span></span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">      &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 练习理解版本</span></span><br><span class="line"><span class="comment">// 如果存在定时器，先清除定时器，再创建新的定时器，直到wait时间内，无新的操作，最后执行函数</span></span><br><span class="line"><span class="function"><span class="title">debounce</span>(<span class="params">func, wait = <span class="number">500</span> ,immediate = <span class="literal">false</span></span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(timeout !== <span class="literal">null</span>) <span class="built_in">clearTimeout</span>(timeout)</span><br><span class="line">    timeout = <span class="built_in">setTimeout</span> (<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">    &#125;,wait)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用场景</p><p>1、防止用户短时间内多次点击按钮</p><p>2、调整浏览器窗口大小时，resize次数过于频繁，造成计算过多，此时需要一次就可以</p><p>3、输入框输入时要进行其他操作时，避免频繁的触发，如搜索、保存等</p><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 节流原理：在一定时间wait毫秒内，只能触发一次</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>func 要执行的回调函数 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 延时的时间</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> timer, flag;</span><br><span class="line"><span class="function"><span class="title">throttle</span>(<span class="params">func, wait = <span class="number">500</span>, immediate = <span class="literal">true</span></span>)</span> &#123;    </span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 如果是立即执行，则在wait毫秒内开始时执行</span></span><br><span class="line">        <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;, wait);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        flag = <span class="literal">true</span></span><br><span class="line">        <span class="comment">// 如果是非立即执行，则在wait毫秒内的结束处执行</span></span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          flag = <span class="literal">false</span></span><br><span class="line">          <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">        &#125;, wait);</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 练习理解</span></span><br><span class="line"><span class="keyword">let</span> timer, flag;</span><br><span class="line"><span class="comment">// timer定时器</span></span><br><span class="line"><span class="comment">// flag，一个标志，flag为true时说明在该wait时间段内，已经存在一个函数操作，不会回调其他函数操作</span></span><br><span class="line"><span class="comment">// wait时间后，会把flage设为false，允许下一函数操作回调</span></span><br><span class="line"><span class="function"><span class="title">throllte</span>(<span class="params">func, wait = <span class="number">500</span>, immediate = <span class="literal">true</span></span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(imeediate)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">typeof</span> func === <span class="string">&#x27;function&#x27;</span> &amp;&amp; func();</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                flage = <span class="literal">false</span></span><br><span class="line">            &#125;,wait)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用场景</p><p>1、scroll事件，每隔一秒计算一次位置信息等</p><p>2、浏览器播放时间，每隔一秒计算一次进度信息等</p><p>3、input框实时搜索并发送请求展示下拉列表，每隔一秒发送一次请求（也可做防抖）</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>防抖和节流的目的都是为了减少不必要的计算，不浪费资源，只在适合的时候再进行触发计算</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>纯css画三角形</title>
      <link href="2022/05/06/css-triangle/"/>
      <url>2022/05/06/css-triangle/</url>
      
        <content type="html"><![CDATA[<h1 id="纯css画三角形"><a href="#纯css画三角形" class="headerlink" title="纯css画三角形"></a>纯css画三角形</h1><h2 id="1-实现一个简单的三角形"><a href="#1-实现一个简单的三角形" class="headerlink" title="1. 实现一个简单的三角形"></a>1. 实现一个简单的三角形</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">200px</span> solid <span class="number">#00a497</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">200px</span> solid <span class="number">#cc7eb1</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">200px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">200px</span> solid transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.一边有颜色、对边没有、两边为transparent</p><p>哪边有颜色哪边就作为三角形的底边</p><h2 id="2-实现带边框的三角形"><a href="#2-实现带边框的三角形" class="headerlink" title="2. 实现带边框的三角形"></a>2. 实现带边框的三角形</h2><p>方法就是<strong>三角形叠放</strong>，即把当前三角形叠放在更大的三角形上方，上图所示的实现方法就是把黄色三角形放在了尺寸更大的蓝色三角形上。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#blue</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">40px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#blue</span>:after &#123;</span><br><span class="line">    content: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">38px</span> <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-codemirror在线编辑器的使用</title>
      <link href="2022/05/06/vue-codemirror/"/>
      <url>2022/05/06/vue-codemirror/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-codemirror在线编辑器的使用"><a href="#vue-codemirror在线编辑器的使用" class="headerlink" title="vue-codemirror在线编辑器的使用"></a>vue-codemirror在线编辑器的使用</h1><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>​    市面上的在线编辑器插件挺多的，如monaco，但是考虑到与vue的兼容性和使用性我还是选择了vue-codemirror，而且codemirrot支持的插件的也多，可以前往<a href="https://codemirror.net/%E5%AE%98%E7%BD%91%E6%9F%A5%E7%9C%8B%E6%9B%B4%E5%A4%9A%E3%80%82">https://codemirror.net/官网查看更多。</a></p><h4 id="1、安装vue-codemirrror"><a href="#1、安装vue-codemirrror" class="headerlink" title="1、安装vue-codemirrror"></a>1、安装vue-codemirrror</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-codemirror --save</span><br></pre></td></tr></table></figure><h4 id="2、在组件里引入"><a href="#2、在组件里引入" class="headerlink" title="2、在组件里引入"></a>2、在组件里引入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  codemirror</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-codemirror&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/lib/codemirror.css&#x27;</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;codemirror/theme/eclipse.css&quot;</span>)</span><br><span class="line"><span class="comment">// 引入主题后还需要在 options 中指定主题才会生效</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;codemirror/mode/shell/shell.js&quot;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/foldcode.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/foldgutter.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/brace-fold.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/xml-fold.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/indent-fold.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/markdown-fold.js&#x27;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;codemirror/addon/fold/comment-fold.js&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="3、声明组件"><a href="#3、声明组件" class="headerlink" title="3、声明组件"></a>3、声明组件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">components:&#123;</span><br><span class="line">codemirror</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="4、vue-data里配置相关参数"><a href="#4、vue-data里配置相关参数" class="headerlink" title="4、vue data里配置相关参数"></a>4、vue data里配置相关参数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">shellOptions: &#123;</span><br><span class="line">        <span class="attr">tabSize</span>: <span class="number">2</span>, <span class="comment">// 缩进格式</span></span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&#x27;shell&#x27;</span>, <span class="comment">//格式</span></span><br><span class="line">        <span class="attr">lineNumbers</span>: <span class="literal">true</span>, <span class="comment">// 显示行号</span></span><br><span class="line">        <span class="attr">line</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">styleActiveLine</span>: <span class="literal">true</span>, <span class="comment">// 高亮选中行</span></span><br><span class="line">        <span class="attr">hintOptions</span>: &#123;</span><br><span class="line">          <span class="attr">completeSingle</span>: <span class="literal">true</span> <span class="comment">// 当匹配只有一项的时候是否自动补全</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">readOnly</span>: <span class="literal">false</span>, <span class="comment">// 这会禁止用户编辑编辑器内容。如果&quot;nocursor&quot;给出特殊值（而不是简单true），则不允许对编辑器进行聚焦。</span></span><br><span class="line">      &#125;,</span><br></pre></td></tr></table></figure><h4 id="5、使用组件"><a href="#5、使用组件" class="headerlink" title="5、使用组件"></a>5、使用组件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;codemirror v-model=&quot;scriptContent&quot; :options=&quot;shellOptions&quot; ref=&quot;cmEditor&quot; &gt;&lt;/codemirror&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>基本的使用就这样就行了，是不是很简单。但是如果想深入的codemirror里面的东西就比较麻烦了，我在使用<a href="https://codemirror.net/addon/merge/merge.js"><code>merge.js</code></a>插件时（差异性对比的作用）想改掉里面符号和提示内容，不过codemirror组件本身没有提供接口修改，所以我这边是直接改它们源码的。</p><h4 id="6、options的配置项（下面的API文档翻译过来的）："><a href="#6、options的配置项（下面的API文档翻译过来的）：" class="headerlink" title="6、options的配置项（下面的API文档翻译过来的）："></a>6、options的配置项（下面的API文档翻译过来的）：</h4><p> <strong>value: string|CodeMirror.Doc</strong><br> 编辑器的起始值。可以是字符串，也可以是文档对象。</p><p><strong>mode: string|object</strong><br>  使用的模式。如果没有给出，这将默认为加载的第一个模式。它可以是一个字符串，可以简单地命名模式，也可以是与模式关联的MIME类型。或者，它可以是包含模式配置选项的对象，具有name命名模式的属性（例如{name: “javascript”, json:  true}）。每种模式的演示页面都包含有关模式支持的配置参数的信息。您可以通过检查CodeMirror.modes  和CodeMirror.mimeModes对象来询问CodeMirror已定义了哪些模式和MIME类型。第一个将模式名称映射到它们的构造函数，第二个将MIME类型映射到模式规范。</p><p><strong>lineSeparator: string|null</strong><br> 显式设置编辑器的行分隔符。默认情况下（值null），文档将在CRLF以及单独的CR和LF上拆分，并且单个LF将在所有输出中用作行分隔符（例如getValue）。给定特定字符串时，只会在该字符串上拆分行，默认情况下，输出将使用相同的分隔符。</p><p><strong>theme: string</strong><br> 用编辑器设计样式的主题。您必须确保.cm-s-[name]  已加载定义相应样式的CSS文件（请参阅theme分发中的目录）。默认值为”default”，包含的颜色codemirror.css。它可以使用多个主题化班一次，例如”foo bar”将同时分配cm-s-foo和cm-s-bar类编辑器。</p><p><strong>indentUnit: integer</strong><br> 一个块（编辑语言中的含义）应缩进多少个空格。默认值为2。</p><p><strong>smartIndent: boolean</strong><br> 是否使用模式提供的上下文相关缩进（或者只是缩进与之前的行相同）。默认为true。</p><p><strong>tabSize: integer</strong><br> 制表符的宽度。默认为4。</p><p><strong>indentWithTabs: boolean</strong><br> 在缩进时，是否tabSize 应该用N个制表符替换前N *个空格。默认值为false。</p><p><strong>electricChars: boolean</strong><br> 配置编辑器在键入可能更改其正确缩进的字符时是否应重新缩进当前行（仅在模式支持缩进时才有效）。默认为true。</p><p><strong>specialChars: RegExp</strong><br> 用于确定哪些字符应由特殊占位符替换的正则表达式。非常适用于非打印特殊字符。默认是/[\u0000-\u001f\u007f-\u009f\u00ad\u061c\u200b-\u200f\u2028\u2029\ufeff]/。<br> specialCharPlaceholder: function(char) → Element<br> 给定由specialChars 选项标识的特殊字符的函数，生成用于表示字符的DOM节点。默认情况下，会显示一个红点（•），并带有标题工具提示以指示字符代码。</p><p><strong>direction: “ltr” | “rtl”</strong><br>  翻转整体布局并选择基本段落方向为从左到右或从右到左。默认为“ltr”。CodeMirror将Unicode双向算法应用于每一行，但不自动检测基本方向 -  它设置为所有行的编辑器方向。当基本方向与用户意图不匹配时，生成的顺序有时会出错（例如，前导和尾随标点跳转到行的错误一侧）。因此，允许用户切换此选项对多语言输入很有帮助。</p><p><strong>rtlMoveVisually: boolean</strong><br> 确定通过从右到左（阿拉伯语，希伯来语）文本的水平光标移动是否是可视的（按向左箭头向左移动光标）或逻辑（按向左箭头移动到字符串中的下一个较低索引，这在视觉上是正确的从右到左的文字）。默认设置false 在Windows上，true在其他平台上。</p><p><strong>keyMap: string</strong><br> 配置要使用的键映射。默认值是”default”，这是唯一定义的键映射codemirror.js。key map目录中可以找到额外的键映射。有关详细信息，请参阅关键映射部分。</p><p><strong>extraKeys: object</strong><br> 可用于为编辑器指定额外的键绑定，以及由其定义的绑定keyMap。应为null或有效的键映射值。<br> configureMouse: fn(cm: CodeMirror, repeat: “single” | “double” | “triple”, event: Event) → Object<br> 允许您配置鼠标选择和拖动的行为。按下鼠标左键时调用该函数。返回的对象可能具有以下属性：</p><p><strong>unit: “char” | “word” | “line” | “rectangle” | fn(CodeMirror, Pos) → {from: Pos, to: Pos}</strong><br> 选择的单位。对于自定义单元，可以是内置单元之一，也可以是一个位置并返回其范围的函数。默认设置是返回”word”双击，”line”三次点击，“rectangle”alt-clicks（或Chrome操作系统，元移位点击）等”single” 。</p><p><strong>extend: bool</strong><br> 是否扩展现有选择范围或开始新选择范围。默认情况下，单击班次时会启用此功能。</p><p><strong>addNew: bool</strong><br> 启用后，这会为现有选择添加新范围，而不是替换它。默认行为是在Mac OS上为命令单击启用此功能，并在其他平台上按住Control键单击。</p><p><strong>moveOnDrag: bool</strong><br> 当鼠标甚至拖动编辑器内部的内容时，它控制是复制（false）还是移动（true）。默认情况下，通过在Mac OS上单击鼠标右键并在其他位置按住Ctrl键单击来启用此功能。</p><p><strong>lineWrapping: boolean</strong><br> CodeMirror是否应滚动或换行以排长行。默认为false（滚动）。</p><p><strong>lineNumbers: boolean</strong><br> 是否在编辑器左侧显示行号。</p><p><strong>firstLineNumber: integer</strong><br> 在哪个数字开始计数行。默认值为1。</p><p><strong>lineNumberFormatter: function(line: integer) → string</strong><br> 用于格式化行号的函数。该函数传递给行号，并应返回将在装订线中显示的字符串。</p><p><strong>gutters: array &lt; string&gt;</strong><br>  可用于添加额外的排水沟（超出或代替行号排水沟）。应该是一个CSS类名称数组，每个类名称定义一个width（和可选的背景），并将用于绘制排水沟的背景。可以包括CodeMirror-linenumbers类，以便明确设置行号装订线的位置（它将默认为所有其他装订线的右侧）。这些类名是传递给的键setGutterMarker。</p><p><strong>fixedGutter: boolean</strong><br> 确定装订线是否水平滚动内容（false）或在水平滚动期间是否保持固定（true，默认值）。</p><p><strong>scrollbarStyle: string</strong><br> 选择滚动条实现。默认为”native”，显示本机滚动条。核心库还提供了”null”完全隐藏滚动条的样式。插件可以实现其他滚动条模型。</p><p><strong>coverGutterNextToScrollbar: boolean</strong><br> 当fixedGutter 打开时，并且存在水平滚动条，默认情况下，此滚动条左侧将显示装订线。如果此选项设置为true，则它将由具有类的元素覆盖CodeMirror-gutter-filler。</p><p><strong>inputStyle: string</strong><br>  选择CodeMirror处理输入和焦点的方式。核心库定义”textarea”  和”contenteditable”输入模式。在移动浏览器上，默认为”contenteditable”。在桌面浏览器上，默认为”textarea”。在”contenteditable”模型中支持IME和屏幕阅读器更好。目的是使其成为未来现代桌面浏览器的默认设置。</p><p><strong>readOnly: boolean|string</strong><br> 这会禁止用户编辑编辑器内容。如果”nocursor”给出特殊值（而不是简单true），则不允许对编辑器进行聚焦。</p><p><strong>showCursorWhenSelecting: boolean</strong><br> 选择是否处于活动状态时是否应绘制光标。默认为false。</p><p><strong>lineWiseCopyCut: boolean</strong><br> 启用时（默认情况下），在没有选择时执行复制或剪切将复制或剪切其上有游标的整行。</p><p><strong>pasteLinesPerSelection: boolean</strong><br> 当从外部源（而不是编辑器本身）粘贴某些内容时，如果行数与选择的数量相匹配，则CodeMirror将默认为每个选择插入一行。您可以将其设置false为禁用该行为。</p><p><strong>selectionsMayTouch: boolean</strong><br> 确定多个选择是在触摸时（默认值）还是仅在它们重叠时（true）连接。</p><p><strong>undoDepth: integer</strong><br> 编辑器存储的最大撤消级别数。请注意，这包括选择更改事件。默认为200。</p><p><strong>historyEventDelay: integer</strong><br> 键入或删除时将导致新历史事件开始的不活动时间（以毫秒为单位）。默认为1250。</p><p><strong>tabindex: integer</strong><br> 要分配给编辑器的选项卡索引。如果没有给出，则不会分配选项卡索引。</p><p><strong>autofocus: boolean</strong><br> 可用于使CodeMirror将焦点集中在初始化上。默认为关闭。当fromTextArea使用when时，并且没有给出该选项的显式值，当源textarea被聚焦时，它将被设置为true，或者它具有autofocus属性而没有聚焦其他元素。</p><p><strong>phrases: ?object</strong><br> 某些插件通过该phrase 方法运行用户可见的字符串（例如界面中的标签）以允许翻译。此选项确定该方法的返回值。如果它为null或者没有输入字符串命名的属性的对象，则返回该字符串。否则，返回与该字符串对应的属性的值。<br> 下面列出了一些更专业的低级选项。这些仅在特定情况下有用，您可能希望在第一次阅读本手册时跳过它们。</p><p><strong>dragDrop: boolean</strong><br> 控制是否启用拖放。默认开启。</p><p><strong>allowDropFileTypes: array&lt; string&gt;</strong><br> 设置（默认为null）时，只能将类型在数组中的文件放入编辑器中。字符串应该是MIME类型，并将根据浏览器报告type 的File对象进行检查。</p><p><strong>cursorBlinkRate: number</strong><br> 用于光标闪烁的半周期（以毫秒为单位）。默认闪烁率为530毫秒。通过将此值设置为零，可以禁用闪烁。负值完全隐藏光标。</p><p><strong>cursorScrollMargin: number</strong><br> 当接近可滚动文档中可见视图的顶部或底部时，总是在光标上方和下方留出多少额外空间。默认值为0。</p><p><strong>cursorHeight: number</strong><br> 确定光标的高度。默认值为1，表示它跨越线的整个高度。对于某些字体（以及某些品味）较小的高度（例如0.85），导致光标无法一直到达线的底部，看起来更好</p><p><strong>resetSelectionOnContextMenu: boolean</strong><br> 控制当在当前选择之外单击打开上下文菜单时，是否将光标移动到单击点。默认为true。</p><p><strong>workTime, workDelay: number</strong><br> 突出显示由伪背景线程完成，该线程将工作workTime毫秒，然后使用超时睡眠workDelay毫秒。默认值为200和300，您可以更改这些选项以突出显示或多或少的激进。</p><p><strong>pollInterval: number</strong><br> 指示CodeMirror应该如何快速轮询其输入textarea以进行更改（聚焦时）。大多数输入都是由事件捕获的，但某些内容（如某些浏览器上的IME输入）不会生成允许CodeMirror正确检测它的事件。因此，它民意调查。默认值为100毫秒。</p><p><strong>flattenSpans: boolean</strong><br> 默认情况下，如果相邻标记具有相同的类，则它们会将相邻标记合并为单个跨度。这将导致更简单的DOM树，从而表现更好。使用某些样式（例如圆角），这将改变文档的外观。您可以将此选项设置为false以禁用此行为。</p><p><strong>addModeClass: boolean</strong><br> 启用时（默认情况下为off），将为每个标记添加一个额外的CSS类，指示生成它的（内部）模式，前缀为”cm-m-“。例如，来自XML模式的标记将获得cm-m-xml该类。</p><p><strong>maxHighlightLength: number</strong><br> 当突出显示长行时，为了保持响应，编辑器将放弃并简单地将行的其余部分设置为纯文本，当它到达某个位置时。默认值为10 000.您可以将其设置Infinity为关闭此行为。</p><p><strong>viewportMargin: integer</strong><br> 指定在当前滚动到视图中的文档部分上方和下方呈现的行数。这会影响滚动时所需的更新量以及此类更新所做的工作量。您通常应该将其保留为默认值10.可以设置为Infinity确保始终呈现整个文档，因此浏览器的文本搜索会对其进行处理。这将对大文档的性能产生不良影响。</p><h4 id="7、事件"><a href="#7、事件" class="headerlink" title="7、事件"></a>7、事件</h4><p>“changes”：每次编辑器内容更改时触发<br>“beforeChange”：事件在更改生效前触发<br>“cursorActivity”：当光标或选中(内容)发生变化，或者编辑器的内容发生了更改的时候触发。<br>“keyHandled”:快捷键映射(key map)中的快捷键被处理(handle)后触发<br>“inputRead”:当用户输入或粘贴时编辑器时触发。<br>“electrictInput”:收到指定的electrict输入时触发<br>“beforeSelectionChange”:此事件在选中内容变化前触发<br>“viewportChange”：编辑器的视口( view port )改变（滚动，编辑或其它动作）时触发<br>“gutterClick”：编辑器的gutter(行号区域)点击时触发<br>“focus”：编辑器收到焦点时触发<br>“blur”:编辑器失去焦点时触发<br>“scroll”:编辑器滚动条滚动时触发<br>“keydown”, “keypress”, “keyup”，“mousedown”, “dblclick”硬件事件触发器</p><h4 id="8、API"><a href="#8、API" class="headerlink" title="8、API"></a>8、API</h4><p>this.$refs.cmEditor.codemirror.setValue(“Hello Kitty”)：设置编辑器内容<br>this.$refs.cmEditor.codemirror.getValue()：获取编辑器内容<br>this.$refs.cmEditor.codemirror.getLine(n):获取第n行的内容<br>this.$refs.cmEditor.codemirror.lineCount()：获取当前行数<br>this.$refs.cmEditor.codemirror.lastLine()：获取最后一行的行号<br>this.$refs.cmEditor.codemirror.isClean():boolean类型判断编译器是否是clean的<br>this.$refs.cmEditor.codemirror.getSelection()：获取选中内容<br>this.$refs.cmEditor.codemirror.getSelections():返回array类型选中内容<br>this.$refs.cmEditor.codemirror.replaceSelection(“替换后的内容”):替换选中的内容<br>this.$refs.cmEditor.codemirror.getCursor():获取光标位置,返回{line,char}<br>this.$refs.cmEditor.codemirror.setOption(“”,””):设置编译器属性<br>this.$refs.cmEditor.codemirror.getOption(“”):获取编译器属性<br>this.$refs.cmEditor.codemirror.addKeyMap(“”,””):添加key-map键值，该键值具有比原来键值更高的优先级<br>this.$refs.cmEditor.codemirror.removeKeyMap（””）:移除key-map<br>this.$refs.cmEditor.codemirror.addOverlay(“”):Enable a highlighting overlay…没试出效果<br>this.$refs.cmEditor.codemirror.removeOverlay（””）:移除Overlay<br>this.$refs.cmEditor.codemirror.setSize(width,height):设置编译器大小<br>this.$refs.cmEditor.codemirror.scrollTo(x,y):设置scroll到position位置<br>this.$refs.cmEditor.codemirror.refresh():刷新编辑器<br>this.$refs.cmEditor.codemirror.execCommand(“命令”):执行命令</p><h4 id="9、效果图"><a href="#9、效果图" class="headerlink" title="9、效果图"></a>9、效果图</h4><p><img src="/vue-codemirror.png" alt="vue-codemirror"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git的基本操作</title>
      <link href="2022/05/06/Git-operation/"/>
      <url>2022/05/06/Git-operation/</url>
      
        <content type="html"><![CDATA[<h1 id="git的基本操作"><a href="#git的基本操作" class="headerlink" title="git的基本操作"></a>git的基本操作</h1><p><a href="https://www.ruanyifeng.com/blog/2014/06/git_remote.html">阮一峰的git教程</a></p><p>1.git init 初始化本地仓库</p><p>2.git add . 把所有内容添加到 缓存区（stage /index）</p><p>3.git commit -m “描述内容”  把缓存区内容 推送到本地仓库</p><p>git reset –hard HEAD^（HEAD~100）  回溯版本</p><p>git status 查看状态</p><p>git log    查看日志文件</p><p>git checkout – readme.txt   撤销修改</p><p>git rm test.txt   删除文件</p><p>5.git remote add origin <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:thewar3/react-sell.git 定向</p><p>6.git push -u origin master   本地仓库推送至远程仓库 </p><p>  注意：可能会有报错</p><p>1&gt; 定向地址错误</p><p>   git remote rm origin </p><p>   git remote add origin <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#x6f;&#109;</a>:thewar3/react-sell.git</p><p>   git push -u origin master </p><p>2&gt; 先把远程仓库内容同步到本地仓库， 在推送</p><p>   git pull origin master</p><p>   git push origin master </p><p>\7. git init 初始化   在克隆 git clone <a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;">&#103;&#x69;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;</a>:thewar3/react-sell.git</p><p> 注册秘钥    ssh-keygen -t rsa -C ‘<a href="mailto:&#116;&#x68;&#101;&#119;&#x61;&#x72;&#51;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;">&#116;&#x68;&#101;&#119;&#x61;&#x72;&#51;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;</a>’   </p><p>创建–合并分支 默认主分支 master   </p><p>git branch dev  创建一个dev的分支</p><p>git checkout dev 切换到dev分支</p><p>git checkout –b dev  前边两个命令的简写</p><p>git branch    查看当前分支</p><p>git merge dev   用于合并指定分支到当前分支</p><p>Git branch –d dev 删除了dev分支</p><p>代码提交过程：</p><p>1：从master切换到开发分支上</p><p>2：git  merge origin master 拉取远程仓库最新的代码</p><p>3：git  add .  追踪文件的变化</p><p>4：git  commit -am ‘备注信息’ 将代码提交到本地仓库</p><p>5：git push 本地仓库代码推送到远程仓库的开发分支上</p><p>6：提交pull request 管理员审核</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flex 弹性布局</title>
      <link href="2022/05/06/Flex-layout/"/>
      <url>2022/05/06/Flex-layout/</url>
      
        <content type="html"><![CDATA[<h1 id="Flex-弹性布局"><a href="#Flex-弹性布局" class="headerlink" title="Flex 弹性布局"></a>Flex 弹性布局</h1><p>布局的传统解决方案，基于<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box_model">盒状模型</a>，依赖 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display"><code>display</code></a> 属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"><code>position</code></a>属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float"><code>float</code></a>属性。它对于那些特殊布局非常不方便，比如，<a href="https://css-tricks.com/centering-css-complete-guide/">垂直居中</a>就不容易实现。（<a href="https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html%EF%BC%89">https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html）</a></p><h2 id="一、Flex-布局是什么？"><a href="#一、Flex-布局是什么？" class="headerlink" title="一、Flex 布局是什么？"></a>一、Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行内元素也可以使用 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png"></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p><h2 id="三、容器的属性"><a href="#三、容器的属性" class="headerlink" title="三、容器的属性"></a>三、容器的属性</h2><p>以下6个属性设置在容器上。</p><blockquote><ul><li>flex-direction</li><li>flex-wrap</li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul></blockquote><h3 id="3-1-flex-direction属性"><a href="#3-1-flex-direction属性" class="headerlink" title="3.1 flex-direction属性"></a>3.1 flex-direction属性</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png"></p><p>它有4个值。</p><blockquote><ul><li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul></blockquote><h3 id="3-2-flex-wrap属性"><a href="#3-2-flex-wrap属性" class="headerlink" title="3.2 flex-wrap属性"></a>3.2 flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>它可能取三个值。</p><p>（1）<code>nowrap</code>（默认）：不换行。</p><p>（2）<code>wrap</code>：换行，第一行在上方。</p><p>（3）<code>wrap-reverse</code>：换行，第一行在下方。</p><h3 id="3-3-flex-flow"><a href="#3-3-flex-flow" class="headerlink" title="3.3 flex-flow"></a>3.3 flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="3-4-justify-content属性"><a href="#3-4-justify-content属性" class="headerlink" title="3.4 justify-content属性"></a>3.4 justify-content属性</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png"></p><p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><blockquote><ul><li><code>flex-start</code>（默认值）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>： 居中</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul></blockquote><h3 id="3-5-align-items属性"><a href="#3-5-align-items属性" class="headerlink" title="3.5 align-items属性"></a>3.5 align-items属性</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png"></p><p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><blockquote><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul></blockquote><h3 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png"></p><p>该属性可能取6个值。</p><blockquote><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li></ul></blockquote><h3 id="四、项目的属性"><a href="#四、项目的属性" class="headerlink" title="四、项目的属性"></a>四、项目的属性</h3><p>以下6个属性设置在项目上。</p><blockquote><ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul></blockquote><h3 id="4-1-order属性"><a href="#4-1-order属性" class="headerlink" title="4.1 order属性"></a>4.1 order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071013.png"></p><h3 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071014.png"></p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="4-3-flex-shrink属性"><a href="#4-3-flex-shrink属性" class="headerlink" title="4.3 flex-shrink属性"></a>4.3 flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071015.jpg"></p><p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3 id="4-4-flex-basis属性"><a href="#4-4-flex-basis属性" class="headerlink" title="4.4 flex-basis属性"></a>4.4 flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p><h3 id="4-5-flex属性"><a href="#4-5-flex属性" class="headerlink" title="4.5 flex属性"></a>4.5 flex属性</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">flex</span>: none | [ &lt;<span class="string">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class="string">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class="string">&#x27;flex-basis&#x27;</span>&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 none (<code>0 0 auto</code>)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071016.png"></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>table组件无限滚动实现</title>
      <link href="2022/05/06/table-infinite-scroll/"/>
      <url>2022/05/06/table-infinite-scroll/</url>
      
        <content type="html"><![CDATA[<h1 id="elementUI和iview的table组件无限滚动实现（滚动加载页面、分页）"><a href="#elementUI和iview的table组件无限滚动实现（滚动加载页面、分页）" class="headerlink" title="elementUI和iview的table组件无限滚动实现（滚动加载页面、分页）"></a>elementUI和iview的table组件无限滚动实现（滚动加载页面、分页）</h1><h4 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h4><p>​    在当前elementUI和iview的table组件都没有无限滚动这个方法（虽然elementUI有InfiniteScroll 、iview有Scroll ，当对table组件都不太兼容，会有重复加载和一直加载等问题），所以就基于el-table-infinite-scroll的基础上，进行二次封装，成为一个table组件可用无限滚动的自定义指令。</p><h4 id="二、安装el-table-infinite-scroll"><a href="#二、安装el-table-infinite-scroll" class="headerlink" title="二、安装el-table-infinite-scroll"></a>二、安装el-table-infinite-scroll</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save el-table-infinite-scroll</span><br></pre></td></tr></table></figure><h4 id="三、tableInfiniteScroll-js"><a href="#三、tableInfiniteScroll-js" class="headerlink" title="三、tableInfiniteScroll.js"></a>三、tableInfiniteScroll.js</h4><p>不多说，直接上代码，直接复制粘贴就行了。</p><p>注意：elTableScrollWrapperClass的要根据elementUI还是iviewUI进行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对 iview 的无限滚动在 Table 上使用的封装</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> elInfiniteScroll <span class="keyword">from</span> <span class="string">&#x27;element-ui/lib/infinite-scroll&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> elScope = <span class="string">&#x27;ElInfiniteScroll&#x27;</span>; <span class="comment">// scope name</span></span><br><span class="line"><span class="keyword">const</span> msgTitle = <span class="string">`[el-table-infinite-scroll]: `</span>; <span class="comment">// message title</span></span><br><span class="line"><span class="comment">// const elTableScrollWrapperClass = &#x27;.el-table__body-wrapper&#x27;;//elementUI时用这个</span></span><br><span class="line"><span class="keyword">const</span> elTableScrollWrapperClass = <span class="string">&#x27;.ivu-table-body&#x27;</span>;<span class="comment">//iviewUI时用这个</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">inserted</span>(<span class="params">el, binding, vnode, oldVnode</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 获取 table 中的滚动层</span></span><br><span class="line">    <span class="keyword">const</span> scrollElem = el.querySelector(elTableScrollWrapperClass);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果没找到元素，返回错误</span></span><br><span class="line">    <span class="keyword">if</span> (!scrollElem) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="string">`<span class="subst">$&#123;msgTitle&#125;</span>找不到 <span class="subst">$&#123;elTableScrollWrapperClass&#125;</span> 容器`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置自动滚动</span></span><br><span class="line">    scrollElem.style.overflowY = <span class="string">&#x27;auto&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// dom 渲染后</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!el.style.height) &#123;</span><br><span class="line">        scrollElem.style.height = <span class="string">&#x27;700px&#x27;</span>;</span><br><span class="line">        <span class="built_in">console</span>.warn(</span><br><span class="line">          <span class="string">`<span class="subst">$&#123;msgTitle&#125;</span>请尽量设置 Table 的高度，可以设置为 auto/100%（自适应高度），未设置会取 700px 的默认值（不然会导致一直加载）`</span></span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      asyncElOptions(vnode, el, scrollElem);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 绑定 infinite-scroll</span></span><br><span class="line">      elInfiniteScroll.inserted(scrollElem, binding, vnode, oldVnode);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 将子集的引用放入 el 上，用于 unbind 中销毁事件</span></span><br><span class="line">      el[elScope] = scrollElem[elScope];</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">componentUpdated</span>(<span class="params">el, binding, vnode</span>)</span> &#123;</span><br><span class="line">    asyncElOptions(vnode, el, el.querySelector(elTableScrollWrapperClass));</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">unbind</span>: elInfiniteScroll.unbind</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步 el-infinite-scroll 的配置项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">sourceVNode</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">sourceElem</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">targetElem</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncElOptions</span>(<span class="params">sourceVNode, sourceElem, targetElem</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> value;</span><br><span class="line">  [<span class="string">&#x27;disabled&#x27;</span>, <span class="string">&#x27;delay&#x27;</span>, <span class="string">&#x27;immediate&#x27;</span>].forEach(<span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    name = <span class="string">&#x27;infinite-scroll-&#x27;</span> + name;</span><br><span class="line">    value = sourceElem.getAttribute(name);</span><br><span class="line">    <span class="keyword">if</span> (value !== <span class="literal">null</span>) &#123;</span><br><span class="line">      targetElem.setAttribute(name, value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// fix: windows/chrome 的 scrollTop + clientHeight 与 scrollHeight 不一致的 BUG</span></span><br><span class="line">  <span class="keyword">const</span> name = <span class="string">&#x27;infinite-scroll-distance&#x27;</span>;</span><br><span class="line">  value = sourceElem.getAttribute(name);</span><br><span class="line">  targetElem.setAttribute(name, value &lt; <span class="number">1</span> ? <span class="number">1</span> : value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p><h4 id="四、index-js"><a href="#四、index-js" class="headerlink" title="四、index,js"></a>四、index,js</h4><p>加入到vue的自定义指令里</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// directive</span></span><br><span class="line"><span class="keyword">import</span> elTableInfiniteScroll <span class="keyword">from</span> <span class="string">&#x27;./tableInfiniteScroll&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vue.use()</span></span><br><span class="line">elTableInfiniteScroll.install = <span class="function">(<span class="params">Vue</span>) =&gt;</span> &#123;</span><br><span class="line">  Vue.directive(<span class="string">&#x27;el-table-infinite-scroll&#x27;</span>, elTableInfiniteScroll);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vue.component()</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> elTableInfiniteScroll;</span><br></pre></td></tr></table></figure><h4 id="五、使用例子"><a href="#五、使用例子" class="headerlink" title="五、使用例子"></a>五、使用例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> elTableInfiniteScroll <span class="keyword">from</span> <span class="string">&#x27;../../directives/index&#x27;</span>;<span class="comment">//在vue文件先引入自定义指令</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="attr">directives</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;el-table-infinite-scroll&#x27;</span>: elTableInfiniteScroll</span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="function"><span class="title">load</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.loading = <span class="literal">true</span></span><br><span class="line">            <span class="comment">//进行异步请求</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Table</span><br><span class="line">       v-el-table-infinite-scroll=&quot;load&quot;</span><br><span class="line">       :columns=&quot;columns&quot;</span><br><span class="line">       :data=&quot;tableData&quot;</span><br><span class="line">       :loading=&quot;table.loading&quot;</span><br><span class="line">&gt;&lt;/Table&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>axios的json、form-data、上传和下载的封装</title>
      <link href="2022/05/06/Axios-encapsulation/"/>
      <url>2022/05/06/Axios-encapsulation/</url>
      
        <content type="html"><![CDATA[<h2 id="axios的json、form-data、上传和下载的封装"><a href="#axios的json、form-data、上传和下载的封装" class="headerlink" title="axios的json、form-data、上传和下载的封装"></a>axios的json、form-data、上传和下载的封装</h2><p>这是项目版的封装，里面的封装的细节根据个人需求进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> types <span class="keyword">from</span> <span class="string">&#x27;../mutation-types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;../../router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> AppConfig <span class="keyword">from</span> <span class="string">&#x27;../../utils/AppConfig&#x27;</span></span><br><span class="line"></span><br><span class="line">axios.defaults.timeout = <span class="number">300000</span> <span class="comment">// 响应时间</span></span><br><span class="line">axios.defaults.headers[<span class="string">&#x27;X-Requested-With&#x27;</span>] = <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">axios.defaults.headers.post[<span class="string">&#x27;content-type&#x27;</span>] = <span class="string">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class="line">axios.defaults.headers.put[<span class="string">&#x27;content-type&#x27;</span>] = <span class="string">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestError</span> <span class="keyword">extends</span> <span class="title">Error</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">message, status, additional</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(message)</span><br><span class="line">    <span class="comment">// console.log(message)</span></span><br><span class="line">    <span class="built_in">this</span>.message = message || (additional.message || <span class="string">&#x27;Undefined error.&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.tipType = status == <span class="number">500</span> ? <span class="string">&#x27;error&#x27;</span> : <span class="string">&#x27;warning&#x27;</span> <span class="comment">//提示信息的图标类型</span></span><br><span class="line">    <span class="comment">/* eslint-disable no-console */</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(</span><br><span class="line">        <span class="string">`There was an error fetching a resource: <span class="subst">$&#123;<span class="built_in">this</span>.message&#125;</span>.`</span>,</span><br><span class="line">        <span class="string">`Additional information: <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        additional.body &amp;&amp; additional.body.message</span></span></span><br><span class="line"><span class="subst"><span class="string">          ? additional.body.message</span></span></span><br><span class="line"><span class="subst"><span class="string">          : <span class="string">&#x27;Not available&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span>`</span></span><br><span class="line">      )</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(</span><br><span class="line">        <span class="string">`There was an error fetching a resource: <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="built_in">this</span>.message</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span>. No additional information available.`</span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* eslint-enable no-console */</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.additional = additional</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">method, url</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> baseUrl = <span class="string">`<span class="subst">$&#123;AppConfig.serverUrl()&#125;</span><span class="subst">$&#123;AppConfig.contextPath()&#125;</span>`</span>;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig = &#123;</span><br><span class="line">      <span class="attr">method</span>: method,</span><br><span class="line">      <span class="attr">url</span>: url,</span><br><span class="line">      <span class="attr">baseURL</span>: baseUrl === <span class="string">&#x27;/&#x27;</span> ? <span class="literal">undefined</span> : baseUrl</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">authenticated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (AppConfig.casEnabled()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.withCredentials = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.session(store.getters.getSessionId)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">session</span>(<span class="params">sessionId</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.auth = &#123;</span><br><span class="line">      <span class="attr">username</span>: sessionId,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;session&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">setHeader</span>(<span class="params">header, value</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.axiosRequestConfig.header) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.header = &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.header[header] = value</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">noSessionExtension</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.request = <span class="built_in">this</span>.request.set(<span class="string">&#x27;X-Server-No-Session-Extension&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="function"><span class="title">json</span>(<span class="params">body, getBody</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.axiosRequestConfig.method === <span class="string">&#x27;GET&#x27;</span> &amp;&amp; body) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.params = body</span><br><span class="line">      <span class="keyword">if</span> (getBody) <span class="built_in">this</span>.axiosRequestConfig.data = getBody <span class="comment">// getBody：放到get方法的body的数据</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (body) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">file</span>(<span class="params">data</span>)</span> &#123;  <span class="comment">//上传文件</span></span><br><span class="line">    <span class="keyword">let</span> body = data.formData ? data.formData : data <span class="comment">//上传的文件FormData,后面加的进度，所以为了不影响前面的代码，所以这样写</span></span><br><span class="line">    <span class="keyword">let</span> callback = data.cb <span class="comment">//回调函数，用来展示上传进度</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.onUploadProgress= <span class="function"><span class="params">progressEvent</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 原生获取上传进度的事件</span></span><br><span class="line">      <span class="keyword">if</span> (progressEvent.lengthComputable) &#123;</span><br><span class="line">        callback &amp;&amp; callback(progressEvent);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// console.log(&#x27;progressEvent :&gt;&gt; &#x27;, progressEvent);</span></span><br><span class="line">      <span class="comment">// if(progressEvent.lengthComputable)&#123;</span></span><br><span class="line">      <span class="comment">//   var complete =</span></span><br><span class="line">      <span class="comment">//   (( (progressEvent.loaded / progressEvent.total) * 100) | 0);</span></span><br><span class="line">      <span class="comment">//   console.log(&#x27;complete :&gt;&gt; &#x27;, complete);</span></span><br><span class="line">        <span class="comment">// this.percent = complete</span></span><br><span class="line">        <span class="comment">// if(complete &gt;=100)&#123;</span></span><br><span class="line">        <span class="comment">//   this.show = false</span></span><br><span class="line">        <span class="comment">//   this.percent = 0; // 重新置0</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;multipart/form-data&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">exportFile</span>(<span class="params">body</span>)</span> &#123;  <span class="comment">//下载任意类型的文件</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;blob&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.download(body, res);</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">exportTable</span>(<span class="params">body</span>)</span> &#123;  <span class="comment">//导出table表格数据</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;blob&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.exportDataTable(body, res);</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">exportDataTable</span>(<span class="params">data, res</span>)</span> &#123;  <span class="comment">//配置动态文件类型的下载,目前用于表格的导出按钮</span></span><br><span class="line">    <span class="keyword">let</span> title = data.title</span><br><span class="line">    <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(res.data)</span><br><span class="line">    <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    link.href = url</span><br><span class="line">    link.setAttribute(<span class="string">&#x27;download&#x27;</span>, title)</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(link)</span><br><span class="line">    link.click()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">noData</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">download</span>(<span class="params">data, file</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> fileName = data.fileName</span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(file.data)</span><br><span class="line">    <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    link.href = url</span><br><span class="line">    link.setAttribute(<span class="string">&#x27;download&#x27;</span>, fileName)</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(link)</span><br><span class="line">    link.click()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">fetch</span>(<span class="params">method, url, body, getBody</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().json(body, getBody)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchFile</span>(<span class="params">method, url, body</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().file(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchExportFile</span>(<span class="params">method, url, body</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().exportFile(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchExportTable</span>(<span class="params">method, url, body</span>) </span>&#123;  <span class="comment">//导出表格</span></span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().exportTable(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端开发规范</title>
      <link href="2022/05/06/my-new-post/"/>
      <url>2022/05/06/my-new-post/</url>
      
        <content type="html"><![CDATA[<h1 id="前端开发规范"><a href="#前端开发规范" class="headerlink" title="前端开发规范"></a><code>前端开发规范</code></h1><h2 id="1、前端code-review规范"><a href="#1、前端code-review规范" class="headerlink" title="1、前端code review规范"></a>1、前端code review规范</h2><table><thead><tr><th>检查类型</th><th>自查细则</th><th>是否通过</th><th>未通过原因/现象</th></tr></thead><tbody><tr><td>常规检查</td><td>代码是否能正常运行？</td><td></td><td></td></tr><tr><td></td><td>控制台是否有明显的报错？</td><td></td><td></td></tr><tr><td></td><td>代码有没有达到预期需求效果？</td><td></td><td></td></tr><tr><td></td><td>代码逻辑是否简单易懂？</td><td></td><td></td></tr><tr><td></td><td>代码书写是否符合规范？</td><td></td><td></td></tr><tr><td></td><td>是否尽可能组件化了？</td><td></td><td></td></tr><tr><td></td><td>有没有重复造轮子</td><td></td><td></td></tr><tr><td></td><td>去掉大段被注释的代码{如果注释代码是可用的，那就先提交未删除的注释代码打SVN上，然后再提交删除了的注释代码，以后能回滚就可以了}</td><td></td><td></td></tr><tr><td></td><td>按钮是否控制了单次点击？</td><td></td><td></td></tr><tr><td></td><td>定时器是否随生命周期消除？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>安全检车</td><td>引入他人（公司内部或者其他外部机构）依赖包，是否存在不可用和版本升级导致功能不可用的风险？</td><td></td><td></td></tr><tr><td></td><td>所有请求是否都使用了HTTPS，包括图片链接、对App应用嵌入的页面，是否提供了HTTPS协议链接？</td><td></td><td></td></tr><tr><td></td><td>代码注释或者文案中是否包含了敏感词汇？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>文档检查</td><td>是否有符合规范的注释？注释是否描述准确？对方法参数或者名词是否进行了解释？</td><td></td><td></td></tr><tr><td></td><td>第三方库使用是否有完善文档？</td><td></td><td></td></tr><tr><td></td><td>readme文档是否书写规范？是否对项目有准确描述？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>性能检查</td><td>页面加载是否超过了3s？超过3s的原因是什么？有没有友好的提示？</td><td></td><td></td></tr><tr><td></td><td>代码有没有明显影响性能的逻辑和计算？</td><td></td><td></td></tr><tr><td></td><td>组件层级是否可控？</td><td></td><td></td></tr><tr><td></td><td>组件通信是否正常？</td><td></td><td></td></tr><tr><td></td><td>页面嵌套是否简单？</td><td></td><td></td></tr></tbody></table><h2 id="2、readme文档规范"><a href="#2、readme文档规范" class="headerlink" title="2、readme文档规范"></a>2、readme文档规范</h2><h3 id="一、-项目搭建环境"><a href="#一、-项目搭建环境" class="headerlink" title="一、 项目搭建环境"></a><strong>一、 项目搭建环境</strong></h3><p>  开发环境：</p><p>​    node v.14.17.1    </p><p>​    vue v.2.6.14     </p><p>​    iview v.4.6.1     </p><p>​    elementUI v.2.4.9</p><p>  Vue项目搭建工具</p><p>  a) vue-cli3 + iview + elementUI</p><p>  项目安装</p><p>  a) npm install    安装依赖</p><p>  b) npm run dev    本地运行项目</p><p>  c) npm run build   打包项目</p><p>  开发工具</p><p>  a) Vscode</p><p>  代码检测工具</p><p>  a) ESLint</p><h3 id="二、-开发规范"><a href="#二、-开发规范" class="headerlink" title="二、 开发规范"></a><strong>二、 开发规范</strong></h3><p>\1. 目录结构</p><p>```</p><p>|— build           构建脚本目录</p><p>  |— build.js       生产环境构建（编译打包）脚本</p><p>  |— check-versions.js     版本验证工具</p><p>  |— utils.js         构建相关工具方法（主要用来处理css类文件的loader）</p><p>  |— vue-loader.conf.js    处理vue中的样式</p><p>  |— webpack.base.conf.js   webpack基础配置</p><p>  |— webpack.dev.conf.js    webpack开发环境配置</p><p>  |— webapck.prod.conf.js   webpack生产环境配置</p><p>  |— webapck.test.conf.js   webpack测试环境配置</p><p>  |— dev-client.js       dev-client.js-配合dev-server.js监听html文件改动也能够触发自动刷新</p><p>  |— dev-server.js       环境的检查和对配置的使用（使服务器正常运行）</p><p>|— config        项目配置</p><p>  |— dev.env.js      开发环境变量</p><p>  |— index.js       主配置文件</p><p>  |— prod.env.js      生产环境变量</p><p>  |— test.env.js      测试环境变量</p><p>|— node_modules       项目依赖模块</p><p>|— src          项目源码目录</p><p>  |— directives      自定义指令</p><p>​    |— index.js     导出指令</p><p>​    |— xx.js       指令</p><p>  |— assets        资源目录，资源会被webpack构建</p><p>​    |— js        公共js文件目录,如util.js(通用方法放里面，如深拷贝)</p><p>​    |— css        公共样式文件目录</p><p>​    |— images      图片存放目录</p><p>  |— components      公共组件目录</p><p>​    |— CodeEditor    在线编辑</p><p>  |— config        一些参数，如serverURI,fixedLayout, hideLogoOnMobile</p><p>  |— filters        全局过滤器，过来URL上的 ‘#’</p><p>  |— modules        前端页面文件</p><p>​    |— application          平台应用管理目录</p><p>​    |— applicationOfRelease     应用发布管理目录</p><p>​    |— logManage           日志管理目录</p><p>​    |— App.vue            根组件</p><p>​    |— Login.vue           登录页面</p><p>​    |— modifyPasswordModal.vue    修改密码页面</p><p>​    |— Dash.vue           首页</p><p>​    |— CASLoginProxy.vue       CAS登录代理页面</p><p>  |— router        前端路由目录</p><p>​    |— index.js     路由基本配置和拦截</p><p>​    |— Route.js     配置vue文件对应路由</p><p>​    |— routes.js     是否需要CAS单点登录，再结合Route配置路由</p><p>  |— store         应用级数据管理</p><p>​    |— api        抽离出的api请求</p><p>​      |— xxx.js    各个模块的请求</p><p>​      |— Path.js    请求url</p><p>​      |— index.js   导出各个模块的请求</p><p>​    |— modules      模块的store,配置接口方法</p><p>​    |— index.js     组装模块并导出，统一管理导出</p><p>​    |— state.js     单一状态树，定义应用数据结构及初始化状态</p><p>​    |— getters.js      获取state中的状态，仅单向获取数据，不做任何修改</p><p>​    |— actions.js      调用mutation方法对数据进行操作 </p><p>​    |— mutation-types.js     存放vuex常用的变量</p><p>​    |— mutations.js   定义state数据的修改操作</p><p>  |— utils         ???（如AppConfig）</p><p>  |— constant.js      此文件用于存放sessionStorage定义的变量，具体你可以参考其中变量是如何定义并实现的</p><p>  |— main.js        入口js文件</p><p>|— static        纯静态资源，不会被webpack构建</p><p>  |— js        js</p><p>​    |— go.src.js   gojs插件</p><p>  |— config.js     window.appConfig,如cas</p><p>|— test         测试</p><p>  |— unit       单元测试</p><p>  |— e2e        e2e测试</p><p>|— .babelrc       babel的配置文件</p><p>|— .editorconfig     编辑器的配置文件</p><p>|— .gitignore      git的忽略配置文件</p><p>|— .postcssrc.js     postcss的配置文件</p><p>|— index.html      html模板，入口页面</p><p>|— package.json     npm包配置文件，依赖包信息</p><p>|— README.md       项目介绍</p><p>```</p><p>\2. 文件、组件命名规范，结构规范</p><p>a) 组件命名</p><p>文件夹的命名以首字母小写且驼峰形式 如highRiskCommand</p><p>文件的命名以首字母大写且驼峰形式 如 HighRiskCommandPage.vue。</p><p>注意一般列表页的命名是Page结尾，像模态框如新增修改等，多以CreateModal结尾。建议只要是模态框，文件命名都用Modal结尾。若遇到表头比较多的，可考虑用Mixin.js混用，详情可参考ServerMixin.js。</p><p>b) 基础组件命名</p><p>  i. 当项目中需要自定义比较多的基础组件的时候，比如一些button，input，icon，建议以一个统一的单词Base开头，或者放到base文件夹统一管理，这样做的目的是为了方便查找。</p><p>  ii. 页面级组件应该放到相对应页面文件夹下，比如一些组件只有这个页面用到，其他地方没有用到的，可以直接放到页面文件夹，然后以父组件开发命名。</p><p>  iii. 项目级组件一般放到公共文件夹public下给所有的页面使用。</p><p>c) 组件结构</p><p>i. 组件结构一个遵循从上往下是template，script，style的结构</p><p>d) 组件样式</p><p>i. 单个组件样式一般可直接写到组件下style标签下，为了防止样式污染，可添加scoped 属性，也可以通过设置作用域来防止样式污染，写样式的时候尽量少写元素选择器，为了提高代码查找速度，可以用类选择器。</p><p>e) 多属性编写格式</p><p>i. 当组件定义很多的props属性值时，应该每个特性属性一行。</p><p>f) Props定义</p><p>i. 当定义组件时，应该对传入组件的props进行严格的定义，至少指定类型，设定默认值，定义好规范方便他人使用。</p><p>g) 位v-for 增加键值Key，这样加快查找速度</p><p>h) 当页面用到一些共享的状态的时，建议使用vuex</p><p>\3. 文件格式</p><p>a) UTF-8</p><p>\4. 页面中class命名要求</p><p>a) 命名中尽量避免使用中文拼音，应该采用更简明有语义的英文单词进行组合</p><p>b) 采用横杠命名，例如”shop-list”</p><p>\5. 资源路径编译规则</p><p>a) 如果是绝对路径，会原样保留</p><p>b) 如果路径以.开头，将会被看做相对模块依赖</p><p>c) 如果路径以@开头，也会被看作一个模块依赖，需要在webpack配置中配置即可。</p><p>d) 文件扩展名例如.js,.vue可以省略，也可以在webpack中配置</p><p>\6. CSS</p><p>a) css使用stylus，.vue以局部css来写值作用于当前文件。</p><p>\7. 注释规范</p><p>  a) 每个方法的顶部加上注释</p><p>  b) Html中每个功能区的开头和结束都写上注释</p><p>  c) 每个功能区的css也注明开始和结束</p><p>  d) 每个字段和变量后面加上注释</p><p>  以下情况填写注释：</p><p>  a. 公共组件的使用说明</p><p>  b. 各组件中重要函数或者类说明</p><p>  c. 复杂的业务逻辑处理说明</p><p>  d. 特殊情况的代码处理说明，对于特殊用途的变量、存在临界值、使用了某种算法思路进行注释说明</p><p>  e. 注释块必须以/(两个星号)/</p><p>  f. 单行注释使用 //</p><p>\8. 编码规范</p><p>尽量按照ESLint格式要求编写代码</p><p>  a) 使用ES6风格编码源码</p><p>  定义变量使用let,定义常量使用const</p><p>  使用export,import模块化</p><p>  b) 组件props原子化</p><p>  提供默认值</p><p>  使用type属性校验类型</p><p>  使用props之前先检查prop是否存在</p><p>  c) 避免this.$parent</p><p>  d) 谨慎使用this.$refs</p><p>  e) 无需将this赋值给component变量</p><p>  f) 调试信息 console.log() debugger使用完及时删除</p><p>\9. Js中的命名规范</p><p>  自定义变量名</p><p>  i. 驼峰式，首字母小写命名规范书写</p><p>  ii. 数字类型以n开头，字符串以s开头，布尔类型以b开头，对象以o开头，数组以a开头。Eg:nAge=29、sName=”Jone”</p><p>  自定义常量名</p><p>  i. 常量名采用大写+ _下划线规范书写</p><p>  函数名</p><p>  i. 驼峰式，首字母小写命名规范</p><p>  ii. 以操作类型+操作对象</p><p>  iii. 操作类型如下：</p><p>  新增类(add)、编辑类(edit)、删除类(delete)、查询单个类(get)、查询列表类(search)、打印类(print)、上传类(upload)、下载类(download)、导入类(import)、导出类(export)、检验类(check)、重置类(reset)、同步类(syn)、分页类(page)</p><h3 id="三、-接口请求"><a href="#三、-接口请求" class="headerlink" title="三、 接口请求"></a>三、 接口请求</h3><p>  请求用Axios ，Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 。</p><p>  Axios请求接口加密。</p><h3 id="四、-可参考Vue官方风格指南"><a href="#四、-可参考Vue官方风格指南" class="headerlink" title="四、 可参考Vue官方风格指南"></a><strong>四、 可参考Vue官方风格指南</strong></h3><p>  <a href="https://cn.vuejs.org/v2/style-guide/">https://cn.vuejs.org/v2/style-guide/</a></p><h3 id="五、-换皮肤"><a href="#五、-换皮肤" class="headerlink" title="五、 换皮肤"></a>五、 换皮肤</h3><p>  C:\Users\89474\Desktop\AdminLTE-master\dist\css\skins下的css复制过来，在index.html引用，并在body上添加对应皮肤的class</p><h3 id="六、-项目资料"><a href="#六、-项目资料" class="headerlink" title="六、 项目资料"></a><strong>六、 项目资料</strong></h3><ul><li>接口文档：</li><li>需求文档：<ul><li>XX组件 8月二期需求 文档地址：https:XX</li><li>xx组件 9月一期需求 文档地址：https:XX</li></ul></li><li>设计文档：</li><li>原型图 文档地址：https:XX</li><li>UI图    文档地址：https:XX</li></ul><h3 id="七、-公共组件封装"><a href="#七、-公共组件封装" class="headerlink" title="七、 公共组件封装"></a><strong>七、 公共组件封装</strong></h3><p>我们如何封装一个公共组件？</p><p>1， 项目中需要多处使用的组件</p><p>2， 不和业务耦合的组件，业务耦合的公共组件</p><p>3， 所有状态都可以在外部控制，通过传入的props来控制其行为而不是暴露其内部结构。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">封装良好的组件隐藏其内部结构，并提供一组属性来控制其行为。</span><br><span class="line"></span><br><span class="line">隐藏内部结构是必要的。其他组件没必要知道或也不依赖组件的内部  结构或实现细节</span><br></pre></td></tr></table></figure><h3 id="八、-第三方文档"><a href="#八、-第三方文档" class="headerlink" title="八、 第三方文档"></a>八、 第三方文档</h3><p>项目中所有用的第三方插件都要整理出来地址，便于后期维护</p><p>1.View UI（<a href="http://v1.iviewui.com/docs/introduce%EF%BC%89">http://v1.iviewui.com/docs/introduce）</a></p><p>2.Element UI（<a href="https://element.eleme.cn/#/zh-CN/component/installation%EF%BC%89">https://element.eleme.cn/#/zh-CN/component/installation）</a></p><p>3.Vue （<a href="https://cn.vuejs.org/%EF%BC%89">https://cn.vuejs.org/）</a></p><p>4.echarts （<a href="https://echarts.apache.org/zh/index.html%EF%BC%89">https://echarts.apache.org/zh/index.html）</a></p><p>5.gojs（英文<a href="https://gojs.net/latest/api/index.html%EF%BC%8C%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3">https://gojs.net/latest/api/index.html，中文文档</a> <a href="https://gojs.net.cn/samples/index.html%EF%BC%89">https://gojs.net.cn/samples/index.html）</a></p><p>6.lodash 工具库 (<a href="https://www.lodashjs.com/#_mapcollection-iteratee_identity">https://www.lodashjs.com/#_mapcollection-iteratee_identity</a>)</p><p>7.Moment.js日期处理类库（<a href="http://momentjs.cn/docs/%EF%BC%89">http://momentjs.cn/docs/）</a></p><p>9.codemirror代码编辑器（<a href="https://codemirror.net/%EF%BC%89">https://codemirror.net/）</a></p><p>10.iconfon图标库（<a href="https://www.iconfont.cn/%EF%BC%89">https://www.iconfont.cn/）</a></p><p>11.富文本vue-quill-editor（<a href="https://www.kancloud.cn/liuwave/quill/1409423%EF%BC%89">https://www.kancloud.cn/liuwave/quill/1409423）</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aboutme</title>
      <link href="2021/05/20/aboutme/"/>
      <url>2021/05/20/aboutme/</url>
      
        <content type="html"><![CDATA[<h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p>姓名：孔繁楷<br>籍贯：广东肇庆<br>邮箱：<a href="mailto:&#49;&#50;&#x37;&#50;&#57;&#x38;&#x35;&#x37;&#56;&#55;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;">&#49;&#50;&#x37;&#50;&#57;&#x38;&#x35;&#x37;&#56;&#55;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;</a><br>电话：150-1463-5308</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/20/hello-world/"/>
      <url>2021/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
