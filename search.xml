<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>axios的json、form-data、上传和下载的封装</title>
      <link href="2022/05/06/Axios-encapsulation/"/>
      <url>2022/05/06/Axios-encapsulation/</url>
      
        <content type="html"><![CDATA[<h2 id="axios的json、form-data、上传和下载的封装"><a href="#axios的json、form-data、上传和下载的封装" class="headerlink" title="axios的json、form-data、上传和下载的封装"></a>axios的json、form-data、上传和下载的封装</h2><p>这是项目版的封装，里面的封装的细节根据个人需求进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> types <span class="keyword">from</span> <span class="string">&#x27;../mutation-types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;../../router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> AppConfig <span class="keyword">from</span> <span class="string">&#x27;../../utils/AppConfig&#x27;</span></span><br><span class="line"></span><br><span class="line">axios.defaults.timeout = <span class="number">300000</span> <span class="comment">// 响应时间</span></span><br><span class="line">axios.defaults.headers[<span class="string">&#x27;X-Requested-With&#x27;</span>] = <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">axios.defaults.headers.post[<span class="string">&#x27;content-type&#x27;</span>] = <span class="string">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class="line">axios.defaults.headers.put[<span class="string">&#x27;content-type&#x27;</span>] = <span class="string">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestError</span> <span class="keyword">extends</span> <span class="title">Error</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">message, status, additional</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(message)</span><br><span class="line">    <span class="comment">// console.log(message)</span></span><br><span class="line">    <span class="built_in">this</span>.message = message || (additional.message || <span class="string">&#x27;Undefined error.&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.tipType = status == <span class="number">500</span> ? <span class="string">&#x27;error&#x27;</span> : <span class="string">&#x27;warning&#x27;</span> <span class="comment">//提示信息的图标类型</span></span><br><span class="line">    <span class="comment">/* eslint-disable no-console */</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(</span><br><span class="line">        <span class="string">`There was an error fetching a resource: <span class="subst">$&#123;<span class="built_in">this</span>.message&#125;</span>.`</span>,</span><br><span class="line">        <span class="string">`Additional information: <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        additional.body &amp;&amp; additional.body.message</span></span></span><br><span class="line"><span class="subst"><span class="string">          ? additional.body.message</span></span></span><br><span class="line"><span class="subst"><span class="string">          : <span class="string">&#x27;Not available&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span>`</span></span><br><span class="line">      )</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(</span><br><span class="line">        <span class="string">`There was an error fetching a resource: <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="built_in">this</span>.message</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span>. No additional information available.`</span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* eslint-enable no-console */</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.additional = additional</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">method, url</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> baseUrl = <span class="string">`<span class="subst">$&#123;AppConfig.serverUrl()&#125;</span><span class="subst">$&#123;AppConfig.contextPath()&#125;</span>`</span>;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig = &#123;</span><br><span class="line">      <span class="attr">method</span>: method,</span><br><span class="line">      <span class="attr">url</span>: url,</span><br><span class="line">      <span class="attr">baseURL</span>: baseUrl === <span class="string">&#x27;/&#x27;</span> ? <span class="literal">undefined</span> : baseUrl</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">authenticated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (AppConfig.casEnabled()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.withCredentials = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.session(store.getters.getSessionId)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">session</span>(<span class="params">sessionId</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.auth = &#123;</span><br><span class="line">      <span class="attr">username</span>: sessionId,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;session&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">setHeader</span>(<span class="params">header, value</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.axiosRequestConfig.header) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.header = &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.header[header] = value</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">noSessionExtension</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.request = <span class="built_in">this</span>.request.set(<span class="string">&#x27;X-Server-No-Session-Extension&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="function"><span class="title">json</span>(<span class="params">body, getBody</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.axiosRequestConfig.method === <span class="string">&#x27;GET&#x27;</span> &amp;&amp; body) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.params = body</span><br><span class="line">      <span class="keyword">if</span> (getBody) <span class="built_in">this</span>.axiosRequestConfig.data = getBody <span class="comment">// getBody：放到get方法的body的数据</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (body) &#123;</span><br><span class="line">      <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">file</span>(<span class="params">data</span>)</span> &#123;  <span class="comment">//上传文件</span></span><br><span class="line">    <span class="keyword">let</span> body = data.formData ? data.formData : data <span class="comment">//上传的文件FormData,后面加的进度，所以为了不影响前面的代码，所以这样写</span></span><br><span class="line">    <span class="keyword">let</span> callback = data.cb <span class="comment">//回调函数，用来展示上传进度</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.onUploadProgress= <span class="function"><span class="params">progressEvent</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 原生获取上传进度的事件</span></span><br><span class="line">      <span class="keyword">if</span> (progressEvent.lengthComputable) &#123;</span><br><span class="line">        callback &amp;&amp; callback(progressEvent);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// console.log(&#x27;progressEvent :&gt;&gt; &#x27;, progressEvent);</span></span><br><span class="line">      <span class="comment">// if(progressEvent.lengthComputable)&#123;</span></span><br><span class="line">      <span class="comment">//   var complete =</span></span><br><span class="line">      <span class="comment">//   (( (progressEvent.loaded / progressEvent.total) * 100) | 0);</span></span><br><span class="line">      <span class="comment">//   console.log(&#x27;complete :&gt;&gt; &#x27;, complete);</span></span><br><span class="line">        <span class="comment">// this.percent = complete</span></span><br><span class="line">        <span class="comment">// if(complete &gt;=100)&#123;</span></span><br><span class="line">        <span class="comment">//   this.show = false</span></span><br><span class="line">        <span class="comment">//   this.percent = 0; // 重新置0</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;multipart/form-data&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">exportFile</span>(<span class="params">body</span>)</span> &#123;  <span class="comment">//下载任意类型的文件</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;blob&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.download(body, res);</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_SUCCESS)</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">exportTable</span>(<span class="params">body</span>)</span> &#123;  <span class="comment">//导出table表格数据</span></span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.data = body</span><br><span class="line">    <span class="built_in">this</span>.axiosRequestConfig.responseType = <span class="string">&#x27;blob&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig).then(</span><br><span class="line">      <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.exportDataTable(body, res);</span><br><span class="line">        <span class="keyword">if</span> (res.data == <span class="string">&#x27;403&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;当前用户无操作权限&#x27;</span>, <span class="number">403</span>, res)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.config.validateStatus(res.status)) &#123;</span><br><span class="line">          <span class="keyword">return</span> res.data</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(res.statusText, res.status, res)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.code === <span class="string">&#x27;ECONNABORTED&#x27;</span>) &#123;</span><br><span class="line">          store.commit(types.REPORT_SERVER_FAILURE)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">          <span class="keyword">const</span> response = error.response</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">400</span> &amp;&amp;</span><br><span class="line">            response.data.errors</span><br><span class="line">          ) &#123;<span class="comment">//400,则根据后台的字段组合并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.errors.map(</span><br><span class="line">              <span class="function"><span class="params">err</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;err.field&#125;</span>: <span class="subst">$&#123;err.defaultMessage&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">400</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn</span><br><span class="line">            &amp;&amp; response.status === <span class="number">401</span></span><br><span class="line">            &amp;&amp; <span class="built_in">this</span>.axiosRequestConfig.url.indexOf(<span class="string">&#x27;/system/cas/callback&#x27;</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">//401,则注销并回到登录页</span></span><br><span class="line">            store.dispatch(<span class="string">&#x27;logout&#x27;</span>, store.getters.getSessionId)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (store.getters.isLoggedIn &amp;&amp; response.status === <span class="number">403</span>) &#123; <span class="comment">//403,则定义文字异常提示</span></span><br><span class="line">            router.push(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(<span class="string">&#x27;&lt;p&gt;请排查是否存在以下情况：&lt;/p&gt;&lt;p&gt;1.当前用户没有操作权限，请联系管理员检查权限设置。&lt;/p&gt;&lt;p&gt; 2.当前浏览器内同时有两个或以上的不同用户登录，最后登录的用户没有操作权限，请刷新本页面后，确认页面右上角的登录用户名是否为当前用户。&lt;/p&gt;&#x27;</span>, <span class="number">403</span>, error)</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">            response.status &amp;&amp;</span><br><span class="line">            response.status === <span class="number">500</span> &amp;&amp;</span><br><span class="line">            response.data.message) &#123;<span class="comment">//500,则根据后台的字段并异常提示</span></span><br><span class="line">            <span class="keyword">const</span> message = response.data.message</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, response.data)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = response.status === <span class="number">404</span> ? <span class="string">&#x27;可能原因：&lt;p&gt;1.页面或当前数据已不存在,请确认网页链接是否正确或尝试刷新页面&lt;/p&gt;&lt;p&gt;2.不存在该请求接口，请联系管理员处理&lt;/p&gt;&#x27;</span> : error.statusText || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          message = error.message || <span class="string">&#x27;请求异常,请尝试刷新页面&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RequestError(message, <span class="number">500</span>, error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">exportDataTable</span>(<span class="params">data, res</span>)</span> &#123;  <span class="comment">//配置动态文件类型的下载,目前用于表格的导出按钮</span></span><br><span class="line">    <span class="keyword">let</span> title = data.title</span><br><span class="line">    <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(res.data)</span><br><span class="line">    <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    link.href = url</span><br><span class="line">    link.setAttribute(<span class="string">&#x27;download&#x27;</span>, title)</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(link)</span><br><span class="line">    link.click()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">noData</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> axios.request(<span class="built_in">this</span>.axiosRequestConfig)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">download</span>(<span class="params">data, file</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> fileName = data.fileName</span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(file.data)</span><br><span class="line">    <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    link.href = url</span><br><span class="line">    link.setAttribute(<span class="string">&#x27;download&#x27;</span>, fileName)</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(link)</span><br><span class="line">    link.click()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">fetch</span>(<span class="params">method, url, body, getBody</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().json(body, getBody)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchFile</span>(<span class="params">method, url, body</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().file(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchExportFile</span>(<span class="params">method, url, body</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().exportFile(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchExportTable</span>(<span class="params">method, url, body</span>) </span>&#123;  <span class="comment">//导出表格</span></span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> Builder(method, url).authenticated().exportTable(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端开发规范</title>
      <link href="2022/05/06/my-new-post/"/>
      <url>2022/05/06/my-new-post/</url>
      
        <content type="html"><![CDATA[<h1 id="前端开发规范"><a href="#前端开发规范" class="headerlink" title="前端开发规范"></a><code>前端开发规范</code></h1><h2 id="1、前端code-review规范"><a href="#1、前端code-review规范" class="headerlink" title="1、前端code review规范"></a>1、前端code review规范</h2><table><thead><tr><th>检查类型</th><th>自查细则</th><th>是否通过</th><th>未通过原因/现象</th></tr></thead><tbody><tr><td>常规检查</td><td>代码是否能正常运行？</td><td></td><td></td></tr><tr><td></td><td>控制台是否有明显的报错？</td><td></td><td></td></tr><tr><td></td><td>代码有没有达到预期需求效果？</td><td></td><td></td></tr><tr><td></td><td>代码逻辑是否简单易懂？</td><td></td><td></td></tr><tr><td></td><td>代码书写是否符合规范？</td><td></td><td></td></tr><tr><td></td><td>是否尽可能组件化了？</td><td></td><td></td></tr><tr><td></td><td>有没有重复造轮子</td><td></td><td></td></tr><tr><td></td><td>去掉大段被注释的代码{如果注释代码是可用的，那就先提交未删除的注释代码打SVN上，然后再提交删除了的注释代码，以后能回滚就可以了}</td><td></td><td></td></tr><tr><td></td><td>按钮是否控制了单次点击？</td><td></td><td></td></tr><tr><td></td><td>定时器是否随生命周期消除？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>安全检车</td><td>引入他人（公司内部或者其他外部机构）依赖包，是否存在不可用和版本升级导致功能不可用的风险？</td><td></td><td></td></tr><tr><td></td><td>所有请求是否都使用了HTTPS，包括图片链接、对App应用嵌入的页面，是否提供了HTTPS协议链接？</td><td></td><td></td></tr><tr><td></td><td>代码注释或者文案中是否包含了敏感词汇？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>文档检查</td><td>是否有符合规范的注释？注释是否描述准确？对方法参数或者名词是否进行了解释？</td><td></td><td></td></tr><tr><td></td><td>第三方库使用是否有完善文档？</td><td></td><td></td></tr><tr><td></td><td>readme文档是否书写规范？是否对项目有准确描述？</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>性能检查</td><td>页面加载是否超过了3s？超过3s的原因是什么？有没有友好的提示？</td><td></td><td></td></tr><tr><td></td><td>代码有没有明显影响性能的逻辑和计算？</td><td></td><td></td></tr><tr><td></td><td>组件层级是否可控？</td><td></td><td></td></tr><tr><td></td><td>组件通信是否正常？</td><td></td><td></td></tr><tr><td></td><td>页面嵌套是否简单？</td><td></td><td></td></tr></tbody></table><h2 id="2、readme文档规范"><a href="#2、readme文档规范" class="headerlink" title="2、readme文档规范"></a>2、readme文档规范</h2><h3 id="一、-项目搭建环境"><a href="#一、-项目搭建环境" class="headerlink" title="一、 项目搭建环境"></a><strong>一、 项目搭建环境</strong></h3><p>  开发环境：</p><p>​    node v.14.17.1    </p><p>​    vue v.2.6.14     </p><p>​    iview v.4.6.1     </p><p>​    elementUI v.2.4.9</p><p>  Vue项目搭建工具</p><p>  a) vue-cli3 + iview + elementUI</p><p>  项目安装</p><p>  a) npm install    安装依赖</p><p>  b) npm run dev    本地运行项目</p><p>  c) npm run build   打包项目</p><p>  开发工具</p><p>  a) Vscode</p><p>  代码检测工具</p><p>  a) ESLint</p><h3 id="二、-开发规范"><a href="#二、-开发规范" class="headerlink" title="二、 开发规范"></a><strong>二、 开发规范</strong></h3><p>\1. 目录结构</p><p>```</p><p>|— build           构建脚本目录</p><p>  |— build.js       生产环境构建（编译打包）脚本</p><p>  |— check-versions.js     版本验证工具</p><p>  |— utils.js         构建相关工具方法（主要用来处理css类文件的loader）</p><p>  |— vue-loader.conf.js    处理vue中的样式</p><p>  |— webpack.base.conf.js   webpack基础配置</p><p>  |— webpack.dev.conf.js    webpack开发环境配置</p><p>  |— webapck.prod.conf.js   webpack生产环境配置</p><p>  |— webapck.test.conf.js   webpack测试环境配置</p><p>  |— dev-client.js       dev-client.js-配合dev-server.js监听html文件改动也能够触发自动刷新</p><p>  |— dev-server.js       环境的检查和对配置的使用（使服务器正常运行）</p><p>|— config        项目配置</p><p>  |— dev.env.js      开发环境变量</p><p>  |— index.js       主配置文件</p><p>  |— prod.env.js      生产环境变量</p><p>  |— test.env.js      测试环境变量</p><p>|— node_modules       项目依赖模块</p><p>|— src          项目源码目录</p><p>  |— directives      自定义指令</p><p>​    |— index.js     导出指令</p><p>​    |— xx.js       指令</p><p>  |— assets        资源目录，资源会被webpack构建</p><p>​    |— js        公共js文件目录,如util.js(通用方法放里面，如深拷贝)</p><p>​    |— css        公共样式文件目录</p><p>​    |— images      图片存放目录</p><p>  |— components      公共组件目录</p><p>​    |— CodeEditor    在线编辑</p><p>  |— config        一些参数，如serverURI,fixedLayout, hideLogoOnMobile</p><p>  |— filters        全局过滤器，过来URL上的 ‘#’</p><p>  |— modules        前端页面文件</p><p>​    |— application          平台应用管理目录</p><p>​    |— applicationOfRelease     应用发布管理目录</p><p>​    |— logManage           日志管理目录</p><p>​    |— App.vue            根组件</p><p>​    |— Login.vue           登录页面</p><p>​    |— modifyPasswordModal.vue    修改密码页面</p><p>​    |— Dash.vue           首页</p><p>​    |— CASLoginProxy.vue       CAS登录代理页面</p><p>  |— router        前端路由目录</p><p>​    |— index.js     路由基本配置和拦截</p><p>​    |— Route.js     配置vue文件对应路由</p><p>​    |— routes.js     是否需要CAS单点登录，再结合Route配置路由</p><p>  |— store         应用级数据管理</p><p>​    |— api        抽离出的api请求</p><p>​      |— xxx.js    各个模块的请求</p><p>​      |— Path.js    请求url</p><p>​      |— index.js   导出各个模块的请求</p><p>​    |— modules      模块的store,配置接口方法</p><p>​    |— index.js     组装模块并导出，统一管理导出</p><p>​    |— state.js     单一状态树，定义应用数据结构及初始化状态</p><p>​    |— getters.js      获取state中的状态，仅单向获取数据，不做任何修改</p><p>​    |— actions.js      调用mutation方法对数据进行操作 </p><p>​    |— mutation-types.js     存放vuex常用的变量</p><p>​    |— mutations.js   定义state数据的修改操作</p><p>  |— utils         ???（如AppConfig）</p><p>  |— constant.js      此文件用于存放sessionStorage定义的变量，具体你可以参考其中变量是如何定义并实现的</p><p>  |— main.js        入口js文件</p><p>|— static        纯静态资源，不会被webpack构建</p><p>  |— js        js</p><p>​    |— go.src.js   gojs插件</p><p>  |— config.js     window.appConfig,如cas</p><p>|— test         测试</p><p>  |— unit       单元测试</p><p>  |— e2e        e2e测试</p><p>|— .babelrc       babel的配置文件</p><p>|— .editorconfig     编辑器的配置文件</p><p>|— .gitignore      git的忽略配置文件</p><p>|— .postcssrc.js     postcss的配置文件</p><p>|— index.html      html模板，入口页面</p><p>|— package.json     npm包配置文件，依赖包信息</p><p>|— README.md       项目介绍</p><p>```</p><p>\2. 文件、组件命名规范，结构规范</p><p>a) 组件命名</p><p>文件夹的命名以首字母小写且驼峰形式 如highRiskCommand</p><p>文件的命名以首字母大写且驼峰形式 如 HighRiskCommandPage.vue。</p><p>注意一般列表页的命名是Page结尾，像模态框如新增修改等，多以CreateModal结尾。建议只要是模态框，文件命名都用Modal结尾。若遇到表头比较多的，可考虑用Mixin.js混用，详情可参考ServerMixin.js。</p><p>b) 基础组件命名</p><p>  i. 当项目中需要自定义比较多的基础组件的时候，比如一些button，input，icon，建议以一个统一的单词Base开头，或者放到base文件夹统一管理，这样做的目的是为了方便查找。</p><p>  ii. 页面级组件应该放到相对应页面文件夹下，比如一些组件只有这个页面用到，其他地方没有用到的，可以直接放到页面文件夹，然后以父组件开发命名。</p><p>  iii. 项目级组件一般放到公共文件夹public下给所有的页面使用。</p><p>c) 组件结构</p><p>i. 组件结构一个遵循从上往下是template，script，style的结构</p><p>d) 组件样式</p><p>i. 单个组件样式一般可直接写到组件下style标签下，为了防止样式污染，可添加scoped 属性，也可以通过设置作用域来防止样式污染，写样式的时候尽量少写元素选择器，为了提高代码查找速度，可以用类选择器。</p><p>e) 多属性编写格式</p><p>i. 当组件定义很多的props属性值时，应该每个特性属性一行。</p><p>f) Props定义</p><p>i. 当定义组件时，应该对传入组件的props进行严格的定义，至少指定类型，设定默认值，定义好规范方便他人使用。</p><p>g) 位v-for 增加键值Key，这样加快查找速度</p><p>h) 当页面用到一些共享的状态的时，建议使用vuex</p><p>\3. 文件格式</p><p>a) UTF-8</p><p>\4. 页面中class命名要求</p><p>a) 命名中尽量避免使用中文拼音，应该采用更简明有语义的英文单词进行组合</p><p>b) 采用横杠命名，例如”shop-list”</p><p>\5. 资源路径编译规则</p><p>a) 如果是绝对路径，会原样保留</p><p>b) 如果路径以.开头，将会被看做相对模块依赖</p><p>c) 如果路径以@开头，也会被看作一个模块依赖，需要在webpack配置中配置即可。</p><p>d) 文件扩展名例如.js,.vue可以省略，也可以在webpack中配置</p><p>\6. CSS</p><p>a) css使用stylus，.vue以局部css来写值作用于当前文件。</p><p>\7. 注释规范</p><p>  a) 每个方法的顶部加上注释</p><p>  b) Html中每个功能区的开头和结束都写上注释</p><p>  c) 每个功能区的css也注明开始和结束</p><p>  d) 每个字段和变量后面加上注释</p><p>  以下情况填写注释：</p><p>  a. 公共组件的使用说明</p><p>  b. 各组件中重要函数或者类说明</p><p>  c. 复杂的业务逻辑处理说明</p><p>  d. 特殊情况的代码处理说明，对于特殊用途的变量、存在临界值、使用了某种算法思路进行注释说明</p><p>  e. 注释块必须以/(两个星号)/</p><p>  f. 单行注释使用 //</p><p>\8. 编码规范</p><p>尽量按照ESLint格式要求编写代码</p><p>  a) 使用ES6风格编码源码</p><p>  定义变量使用let,定义常量使用const</p><p>  使用export,import模块化</p><p>  b) 组件props原子化</p><p>  提供默认值</p><p>  使用type属性校验类型</p><p>  使用props之前先检查prop是否存在</p><p>  c) 避免this.$parent</p><p>  d) 谨慎使用this.$refs</p><p>  e) 无需将this赋值给component变量</p><p>  f) 调试信息 console.log() debugger使用完及时删除</p><p>\9. Js中的命名规范</p><p>  自定义变量名</p><p>  i. 驼峰式，首字母小写命名规范书写</p><p>  ii. 数字类型以n开头，字符串以s开头，布尔类型以b开头，对象以o开头，数组以a开头。Eg:nAge=29、sName=”Jone”</p><p>  自定义常量名</p><p>  i. 常量名采用大写+ _下划线规范书写</p><p>  函数名</p><p>  i. 驼峰式，首字母小写命名规范</p><p>  ii. 以操作类型+操作对象</p><p>  iii. 操作类型如下：</p><p>  新增类(add)、编辑类(edit)、删除类(delete)、查询单个类(get)、查询列表类(search)、打印类(print)、上传类(upload)、下载类(download)、导入类(import)、导出类(export)、检验类(check)、重置类(reset)、同步类(syn)、分页类(page)</p><h3 id="三、-接口请求"><a href="#三、-接口请求" class="headerlink" title="三、 接口请求"></a>三、 接口请求</h3><p>  请求用Axios ，Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 。</p><p>  Axios请求接口加密。</p><h3 id="四、-可参考Vue官方风格指南"><a href="#四、-可参考Vue官方风格指南" class="headerlink" title="四、 可参考Vue官方风格指南"></a><strong>四、 可参考Vue官方风格指南</strong></h3><p>  <a href="https://cn.vuejs.org/v2/style-guide/">https://cn.vuejs.org/v2/style-guide/</a></p><h3 id="五、-换皮肤"><a href="#五、-换皮肤" class="headerlink" title="五、 换皮肤"></a>五、 换皮肤</h3><p>  C:\Users\89474\Desktop\AdminLTE-master\dist\css\skins下的css复制过来，在index.html引用，并在body上添加对应皮肤的class</p><h3 id="六、-项目资料"><a href="#六、-项目资料" class="headerlink" title="六、 项目资料"></a><strong>六、 项目资料</strong></h3><ul><li>接口文档：</li><li>需求文档：<ul><li>XX组件 8月二期需求 文档地址：https:XX</li><li>xx组件 9月一期需求 文档地址：https:XX</li></ul></li><li>设计文档：</li><li>原型图 文档地址：https:XX</li><li>UI图    文档地址：https:XX</li></ul><h3 id="七、-公共组件封装"><a href="#七、-公共组件封装" class="headerlink" title="七、 公共组件封装"></a><strong>七、 公共组件封装</strong></h3><p>我们如何封装一个公共组件？</p><p>1， 项目中需要多处使用的组件</p><p>2， 不和业务耦合的组件，业务耦合的公共组件</p><p>3， 所有状态都可以在外部控制，通过传入的props来控制其行为而不是暴露其内部结构。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">封装良好的组件隐藏其内部结构，并提供一组属性来控制其行为。</span><br><span class="line"></span><br><span class="line">隐藏内部结构是必要的。其他组件没必要知道或也不依赖组件的内部  结构或实现细节</span><br></pre></td></tr></table></figure><h3 id="八、-第三方文档"><a href="#八、-第三方文档" class="headerlink" title="八、 第三方文档"></a>八、 第三方文档</h3><p>项目中所有用的第三方插件都要整理出来地址，便于后期维护</p><p>1.View UI（<a href="http://v1.iviewui.com/docs/introduce%EF%BC%89">http://v1.iviewui.com/docs/introduce）</a></p><p>2.Element UI（<a href="https://element.eleme.cn/#/zh-CN/component/installation%EF%BC%89">https://element.eleme.cn/#/zh-CN/component/installation）</a></p><p>3.Vue （<a href="https://cn.vuejs.org/%EF%BC%89">https://cn.vuejs.org/）</a></p><p>4.echarts （<a href="https://echarts.apache.org/zh/index.html%EF%BC%89">https://echarts.apache.org/zh/index.html）</a></p><p>5.gojs（英文<a href="https://gojs.net/latest/api/index.html%EF%BC%8C%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3">https://gojs.net/latest/api/index.html，中文文档</a> <a href="https://gojs.net.cn/samples/index.html%EF%BC%89">https://gojs.net.cn/samples/index.html）</a></p><p>6.lodash 工具库 (<a href="https://www.lodashjs.com/#_mapcollection-iteratee_identity">https://www.lodashjs.com/#_mapcollection-iteratee_identity</a>)</p><p>7.Moment.js日期处理类库（<a href="http://momentjs.cn/docs/%EF%BC%89">http://momentjs.cn/docs/）</a></p><p>9.codemirror代码编辑器（<a href="https://codemirror.net/%EF%BC%89">https://codemirror.net/）</a></p><p>10.iconfon图标库（<a href="https://www.iconfont.cn/%EF%BC%89">https://www.iconfont.cn/）</a></p><p>11.富文本vue-quill-editor（<a href="https://www.kancloud.cn/liuwave/quill/1409423%EF%BC%89">https://www.kancloud.cn/liuwave/quill/1409423）</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aboutme</title>
      <link href="2021/05/20/aboutme/"/>
      <url>2021/05/20/aboutme/</url>
      
        <content type="html"><![CDATA[<h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p>姓名：孔繁楷<br>籍贯：广东肇庆<br>邮箱：<a href="mailto:&#49;&#50;&#x37;&#50;&#57;&#x38;&#x35;&#x37;&#56;&#55;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;">&#49;&#50;&#x37;&#50;&#57;&#x38;&#x35;&#x37;&#56;&#55;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;</a><br>电话：150-1463-5308</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/20/hello-world/"/>
      <url>2021/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
